/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("jQuery(document).ready(function ($) {\r\n\r\n\r\n  $.ajaxSetup({\r\n    headers: {\r\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n    }\r\n  });\r\n\r\n  // Date picker\r\n  $('#project_start').datetimepicker({\r\n    format: 'L'\r\n  });\r\n\r\n  $('#project_end').datetimepicker({\r\n    format: 'L'\r\n  });\r\n\r\n  $('#join_deadline').datetimepicker({\r\n    format: 'L'\r\n  });\r\n\r\n  $('.evaluation-dates').datetimepicker({\r\n    format: 'L'\r\n  });\r\n\r\n  $('#project_start').datetimepicker();\r\n  $('#project_end').datetimepicker({\r\n    useCurrent: false //Important! See issue #1075\r\n  });\r\n  $(\"#project_start\").on(\"dp.change\", function (e) {\r\n    $('#project_end').data(\"DateTimePicker\").minDate(e.date);\r\n  });\r\n  $(\"#project_end\").on(\"dp.change\", function (e) {\r\n    $('#project_start').data(\"DateTimePicker\").maxDate(e.date);\r\n  });\r\n\r\n\r\n\r\n  // Tags input\r\n  $('input #tags').on('change', function (event) {\r\n    var $element = $(event.target),\r\n      $container = $element.closest('.example');\r\n\r\n    var val = $element.val();\r\n    if (val === null)\r\n      val = \"null\";\r\n    $('code', $('pre.val', $container)).html(($.isArray(val) ? JSON.stringify(val) : \"\\\"\" + val.replace('\"', '\\\\\"') + \"\\\"\"));\r\n    $('code', $('pre.items', $container)).html(JSON.stringify($element.tagsinput('items')));\r\n  }).trigger('change');\r\n\r\n\r\n  // Sweet alert\r\n  $(\"button#delete\").on(\"click\", function (e) {\r\n\r\n    swal({\r\n      title: window.Laravel.are_you_sure_notification,\r\n      text: window.Laravel.cannot_restore_notification,\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: window.Laravel.yes_delete,\r\n      cancelButtonText: window.Laravel.no,\r\n      closeOnConfirm: false\r\n    },\r\n      function () {\r\n        $(e.target).prev('.delete-project').submit();\r\n\r\n      });\r\n\r\n  });\r\n\r\n\r\n  $(\"button#delete-user-button\").on(\"click\", function (e) {\r\n\r\n    swal({\r\n      title: window.Laravel.are_you_sure_notification,\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#DD6B55\",\r\n      confirmButtonText: window.Laravel.yes_delete,\r\n      cancelButtonText: window.Laravel.no,\r\n      closeOnConfirm: false\r\n    },\r\n      function () {\r\n        $(e.target).prev('.delete-user').submit();\r\n\r\n      });\r\n\r\n  });\r\n\r\n\r\n  $(\"a#groups-finish-button\").on(\"click\", function (e) {\r\n    if (!$(\"a#groups-finish-button\").hasClass('not-empty')) {\r\n      e.preventDefault();\r\n\r\n      swal({\r\n        title: window.Laravel.finish_project_notification,\r\n        type: \"info\",\r\n        confirmButtonText: window.Laravel.yes,\r\n        closeOnConfirm: false\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\"button#join-project-button\").on(\"click\", function (e) {\r\n    e.preventDefault();\r\n    var user_tlu_student_id = null\r\n    if (window.Laravel.user.tlu_student_id) {\r\n      user_tlu_student_id = JSON.parse(window.Laravel.user.tlu_student_id)[0][0].split(\"@\")[0];\r\n    } else {\r\n      user_tlu_student_id = 0;\r\n    }\r\n    $.ajax({\r\n      url: window.Laravel.base_path + \"/oisJoinConfirmation?oppijaId=\" + user_tlu_student_id + \"&ainekood=YID6001.YM\",\r\n    }).done(function (response) {\r\n      var data = JSON.parse(response);\r\n      var textToDisplay = \"ELU õppeainega liitumiseks kasuta TLÜ kasutajakontot või kirjuta elu@tlu.ee // To join LIFE course please use TLU account or contact elu@tlu.ee\\n\";\r\n      var showConfirm = false;\r\n      if (data.Viga) {\r\n        textToDisplay = data.Viga;\r\n      } else {\r\n        if (window.Laravel.user.tlu_student_id != null) {\r\n          var info = \"\";\r\n          var attendace = \"Registreerud ELU õppeainesse esmakordselt / This is your first registration to LIFE course\\n\";\r\n          if (data.deklaratsioon.onKorduv == true) {\r\n            attendace = \"Olete ELU õppeaine juba läbinud. Osalemiseks kontakteeruge elu@tlu.ee / If you want to join to the LIFE course second time, please contact LIFE coordinators elu@tlu.ee\\n\";\r\n          }\r\n          if (data.deklaratsioon.teade != null) {\r\n            info = \"Info: \" + data.deklaratsioon.teade;\r\n          }\r\n          if (data.deklaratsioon.hind == 0) {\r\n            price_et = \"Tasuta õpe\";\r\n            price_en = \"Tuition-free study\";\r\n          } else {\r\n            price_et = \"Tasuline õpe\";\r\n            price_en = \"Tuition-based study\";\r\n          }\r\n          var price = price_en + \"//\" + price_et + \"\\n\";\r\n          textToDisplay = attendace + price + info;\r\n          if (data.deklaratsioon.saab == true) {\r\n            showConfirm = true;\r\n          }\r\n        }\r\n      }\r\n      swal({\r\n        title: window.Laravel.are_you_sure_notification,\r\n        text: textToDisplay,\r\n        type: \"info\",\r\n        showCancelButton: true,\r\n        showConfirmButton: showConfirm,\r\n        confirmButtonColor: \"#DD6B55\",\r\n        confirmButtonText: window.Laravel.yes,\r\n        cancelButtonText: \"Cancel\",\r\n        closeOnConfirm: false\r\n      },\r\n        function () {\r\n          $(e.target).prev('#join-project').submit();\r\n        });\r\n    });\r\n    /*\r\n    fetch(window.Laravel.base_path+\"/oisJoinConfirmation?oppijaId=\"+\"91980\"+\"&ainekood=YID6001.YM\")\r\n    .then(function (declaration) {\r\n        console.log(declaration);\r\n        swal({\r\n            title: window.Laravel.are_you_sure_notification,\r\n            text: declaration.response,\r\n            type: \"info\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#DD6B55\",\r\n            confirmButtonText: window.Laravel.yes,\r\n            cancelButtonText: window.Laravel.no,\r\n            closeOnConfirm: false\r\n        },\r\n        function(){\r\n            $(e.target).prev('#join-project').submit();\r\n        })\r\n    });\r\n    */\r\n\r\n\r\n  });\r\n\r\n  // Select2\r\n  $(\".js-example-basic-multiple\").select2();\r\n\r\n\r\n\r\n  // Select2 Ajax - attaching users to project team manually\r\n  $(\".js-users-data-ajax\").select2({\r\n    placeholder: window.Laravel.name_or_email_placeholder,\r\n    language: { inputTooShort: function () { return window.Laravel.three_or_more_char; } },\r\n    allowClear: true,\r\n    ajax: {\r\n      url: window.Laravel.search_user_api_url,\r\n      dataType: 'json',\r\n      delay: 250,\r\n      method: 'POST',\r\n      data: function (params) {\r\n        return {\r\n          q: params.term, // search term\r\n          project_id: $('.js-users-data-ajax').attr(\"project-id\"),\r\n          page: params.page\r\n        };\r\n      },\r\n      processResults: function (data) {\r\n        return {\r\n          results: $.map(data, function (item) {\r\n            return {\r\n              text: (item.full_name ? item.full_name : item.name) + ' (' + (item.contact_email ? item.contact_email : item.email) + ')',\r\n              id: item.id\r\n            }\r\n          })\r\n        };\r\n      },\r\n      cache: false\r\n    },\r\n    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\r\n    minimumInputLength: 3\r\n  });\r\n\r\n  //Smooth scroll for front page\r\n  $('body.frontpage a[href*=\"#\"]:not([href=\"#\"])').click(function () {\r\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\r\n      var target = $(this.hash);\r\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\r\n      if (target.length) {\r\n        $('html, body').animate({\r\n          scrollTop: target.offset().top\r\n        }, 1000);\r\n        return false;\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n\r\n  //Go from front page to certain tab in FAQ page\r\n  var hash = window.location.hash;\r\n  if (hash.startsWith('#item')) {\r\n    hash && $('ul.nav a[href=\"' + hash + '\"]').tab('show');\r\n  }\r\n\r\n  // Change project-search placeholder dynamically\r\n  var searchDropdown = document.querySelector('.search-project #search_param');\r\n  searchDropdown.addEventListener('change', updateSearchFieldPlaceholder);\r\n\r\n  function updateSearchFieldPlaceholder() {\r\n    var searchField = document.querySelector('.search-project .search-input input');\r\n    \r\n    if(this.value === 'term'){\r\n      searchField.placeholder = trans.search.enter_year_and_semester;\r\n    }else{\r\n      searchField.placeholder = trans.search.enter_name;\r\n    }\r\n  }\r\n\r\n\r\n  //Panel used in search view to show a list of member emails\r\n  $('.panel-heading span.clickable').parents('.panel').find('.panel-body').slideUp();\r\n\r\n  $('.panel-heading span.clickable').on(\"click\", function (e) {\r\n    var $this = $(this);\r\n    if (!$this.hasClass('panel-collapsed')) {\r\n      $this.parents('.panel').find('.panel-body').slideUp();\r\n      $this.addClass('panel-collapsed');\r\n      $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');\r\n    } else {\r\n      $this.parents('.panel').find('.panel-body').slideDown();\r\n      $this.removeClass('panel-collapsed');\r\n      $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');\r\n    }\r\n  });\r\n\r\n\r\n  //Facebook sharing button handler, Facebook SDK for JavaScript\r\n  function postToFeed(url) {\r\n    var obj = { method: 'feed', link: url };\r\n    function callback(response) { }\r\n    FB.ui(obj, callback);\r\n  }\r\n\r\n  $('.btnShare').click(function () {\r\n    elem = $(this);\r\n    postToFeed(elem.prop('href'));\r\n\r\n    return false;\r\n  });\r\n\r\n\r\n  //TinyMC\r\n  tinyMCE.baseURL = window.Laravel.base_path + \"/js/tinymce\";\r\n\r\n  tinymce.init({\r\n    mode: \"textareas\",\r\n    theme: \"modern\",\r\n    language: window.Laravel.language,\r\n    plugins: [\"link\", \"paste\"],\r\n    menubar: false,\r\n    toolbar: \"link\",\r\n    removeformat: [\r\n      { selector: 'b,strong,em,i,font,u,strike', remove: 'all', split: true, expand: false, block_expand: true, deep: true },\r\n      { selector: 'span', attributes: ['style', 'class'], remove: 'empty', split: true, expand: false, deep: true },\r\n      { selector: '*', attributes: ['style', 'class'], split: false, expand: false, deep: true, }\r\n    ],\r\n    selection_toolbar: 'bold italic | quicklink h2 h3 blockquote',\r\n    editor_selector: \"mceSimpleLink\",\r\n    paste_as_text: true\r\n  });\r\n\r\n  tinyMCE.init({\r\n    mode: \"textareas\",\r\n    language: window.Laravel.language,\r\n    plugins: [\"link\", \"lists\", \"paste\", \"noneditable\", \"preventdelete\"],\r\n    height: \"350\",\r\n    removeformat: [\r\n      { selector: 'b,strong,em,i,font,u,strike', remove: 'all', split: true, expand: false, block_expand: true, deep: true },\r\n      { selector: 'span', attributes: ['style', 'class'], remove: 'empty', split: true, expand: false, deep: true },\r\n      { selector: '*', attributes: ['style', 'class'], split: false, expand: false, deep: true }\r\n    ],\r\n    toolbar: \"redo undo bold italic numlist bullist link\",\r\n    menubar: false,\r\n    editor_selector: \"mceSimple\",\r\n    paste_as_text: true\r\n  });\r\n\r\n  $('#submit-project-button').on('click', function (e) {\r\n    e.preventDefault();\r\n    tinyMCE.triggerSave();\r\n    if (tinyMCE.get('project_outcomes').getContent() != '') {\r\n      tinyMCE.get('project_outcomes').setContent(removeExcessWhitespaceFromString(tinyMCE.get('project_outcomes').getContent().split('&nbsp;').join(' ')));\r\n    }\r\n    if (tinyMCE.get('novelty_desc').getContent() != '') {\r\n      tinyMCE.get('novelty_desc').setContent(removeExcessWhitespaceFromString(tinyMCE.get('novelty_desc').getContent().split('&nbsp;').join(' ')));\r\n    }\r\n    if (tinyMCE.get('aim').getContent() != '') {\r\n      tinyMCE.get('aim').setContent(removeExcessWhitespaceFromString(tinyMCE.get('aim').getContent().split('&nbsp;').join(' ')));\r\n    }\r\n    if (tinyMCE.get('description').getContent() != '') {\r\n      tinyMCE.get('description').setContent(removeExcessWhitespaceFromString(tinyMCE.get('description').getContent().split('&nbsp;').join(' ')));\r\n    }\r\n    tinyMCE.triggerSave();\r\n    $('#project-form').submit();\r\n  });\r\n\r\n\r\n  function removeExcessWhitespaceFromString(string) {\r\n    var stringLength = string.length;\r\n    var outputString = \"\";\r\n    for (var i = 0; i < stringLength - 1; i++) {\r\n      if (!(string[i] === \" \" && string[i + 1] === \" \")) {\r\n        outputString += string[i];\r\n      }\r\n    }\r\n    if (string[stringLength] !== \" \") {\r\n      outputString += string[stringLength - 1]\r\n    }\r\n    // Removing empty tags\r\n    var helper = $('<div>').append(outputString);\r\n    removeEmptyIfNoChildren(helper);\r\n    outputString = helper.prop('innerHTML');\r\n    return outputString;\r\n  }\r\n\r\n  function removeEmptyIfNoChildren(element) {\r\n    if (element.children().length > 0) {\r\n      element.children().each(function () {\r\n        removeEmptyIfNoChildren($(this));\r\n      });\r\n    }\r\n    if (element.html() === \"\") {\r\n      element.remove();\r\n    }\r\n  }\r\n\r\n  //Front page logo translation\r\n  if (window.Laravel.language == 'en') {\r\n    $('.block01.block01b > .pad').css(\"background\", 'url(css/bg05_en.png) no-repeat 50% 50%');\r\n  } else {\r\n    $('.block01.block01b > .pad').css(\"background\", 'url(css/bg05.png) no-repeat 50% 50%');\r\n  }\r\n\r\n\r\n  //Select project share url on click on input\r\n  $(\"input[name='share_url']\").on(\"click\", function () {\r\n    $(this).select();\r\n  });\r\n\r\n\r\n  if ($(\"#project_all_members\").length) {\r\n\r\n    //Project id used by ProjectModerator middleware\r\n    var url = window.location.pathname;\r\n    var segments = url.split('/');\r\n    var project_id = segments[segments.length - 2];\r\n\r\n\r\n    //Drag and drop project group members functionality\r\n    Sortable.create(project_all_members, {\r\n      group: { name: \"project-all-members\", pull: true, put: true },\r\n      animation: 150,\r\n      handle: '.drag-handle'\r\n    });\r\n\r\n    var el = $('.project-group');\r\n    $(el).each(function (i, e) {\r\n      var sortable = Sortable.create(e, {\r\n        group: {\r\n          name: el.attr('group-id'),\r\n          pull: true,\r\n          put: function () {\r\n            return true;\r\n          }\r\n        },\r\n        animation: 150,\r\n        handle: '.drag-handle',\r\n        onAdd: function (evt) {\r\n\r\n          var itemEl = evt.item;  // dragged HTMLElement\r\n          var from = evt.from;\r\n\r\n\r\n          $.ajax({\r\n            url: window.Laravel.add_user_to_group_api_url,\r\n            dataType: 'json',\r\n            delay: 250,\r\n            method: 'POST',\r\n            cache: false,\r\n            data: {\r\n\r\n              id: project_id,\r\n              to: $(itemEl).parent().attr('group-id'),\r\n              from: $(from).attr('group-id'),\r\n              user: $(itemEl).attr('user-id')\r\n\r\n            }\r\n          }).done(function (msg) {\r\n            console.log(msg);\r\n            if ($('a#groups-finish-button').length) {\r\n              $('a#groups-finish-button').addClass('not-empty');\r\n            }\r\n\r\n\r\n          });\r\n\r\n        }\r\n\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  //Copy user main TLU email into contact email fields, used on profile page\r\n  $(\"#filler\").click(fillValues);\r\n\r\n\r\n  function fillValues() {\r\n    var value = $(\"#tlu_email\").val();\r\n    var fields = $(\".contact-email\");\r\n    fields.each(function (i) {\r\n      $(this).val(value);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //Add custom institution field in user registration form\r\n  $('#institution').on('change', function () {\r\n    if ($(this).val() === window.Laravel.other_institution) {\r\n      $(\"#other-institution\").show()\r\n    }\r\n    else {\r\n      $(\"#other-institution\").hide()\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n  // Add new group links input field\r\n  var add_links_field_buttons = $(\".add_links_field_button\");\r\n\r\n  add_links_field_buttons.each(function (i, obj) {\r\n    var group_id = $(obj).attr(\"group-id\");\r\n    $(obj).click(function (e) {\r\n      e.preventDefault();\r\n      var $div = $(this).next(\".group-materials\").children().last();\r\n\r\n      var num = $div.prop(\"id\");\r\n\r\n      num = parseInt(num.split(\"_\").pop());\r\n\r\n\r\n      var clone = $($div).clone();\r\n      clone.prop('id', 'group_materials_' + group_id + '_' + (num + 1));\r\n      clone.find(\"input\").val(\"\");\r\n      clone.insertAfter($div);\r\n\r\n      var tagsinput = clone.find('.tags');\r\n      clone.find('.bootstrap-tagsinput').remove();\r\n\r\n      $(tagsinput).attr('name', 'group_material_tags[' + group_id + '][]');\r\n      $(tagsinput).addClass('form-control tags');\r\n      tagsinput.tagsinput();\r\n      tagsinput.tagsinput('removeAll');\r\n\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n  });\r\n\r\n\r\n\r\n\r\n  // Remove group links input field\r\n  var remove_links_field_button = $(\".remove_links_field_button\");\r\n\r\n  remove_links_field_button.each(function (i, obj) {\r\n    var group_id = $(obj).attr(\"group-id\");\r\n    $(obj).click(function (e) {\r\n\r\n      e.preventDefault();\r\n      var $div = $(this).parent().children(\":last-child\");\r\n\r\n      var num = $div.prop(\"id\");\r\n\r\n      num = parseInt(num.split(\"_\").pop());\r\n\r\n      if (num > 0) {\r\n        $div.remove();\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    });\r\n  });\r\n\r\n\r\n\r\n  $('[data-toggle=\"popover\"]').popover();\r\n\r\n\r\n  $('#clear-embedded').click(function () {\r\n    $('#embedded')\r\n      .val('')\r\n  });\r\n\r\n\r\n  $('#clear-group-embedded').click(function () {\r\n    $(this).prev('input').val('');\r\n  });\r\n\r\n\r\n  $('body').tooltip({\r\n    selector: '[rel=\"tooltip\"]'\r\n  });\r\n\r\n\r\n  //Group title renaming;\r\n  $('.group-name').editable({\r\n    send: 'always',\r\n    ajaxOptions: {\r\n      dataType: 'json',\r\n      type: 'post',\r\n\r\n    },\r\n    params: function (params) {\r\n      //originally params contain pk, name and value\r\n      params.id = $(this).closest(\"div\").attr(\"project-id\");\r\n      return params;\r\n    }\r\n\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n});\r\n\r\nDropzone.autoDiscover = false;\r\nDropzone.prototype.defaultOptions.dictRemoveFile = window.Laravel.remove_file_button;\r\nDropzone.prototype.defaultOptions.dictCancelUpload = 'Uploading';\r\n\r\nvar dropzones = $(\".dropzone\");\r\ndropzones.each(function (i) {\r\n  if (this.id.indexOf(\"presentationUpload\") !== -1) {\r\n    var resourceName = \"Poster\";\r\n    var accepted = \"application/pdf\";\r\n    var maxNumberOfFiles = 1;\r\n    var group_id = parseInt($(this).prop(\"id\").match(/\\d+/g), 10);\r\n\r\n    var project_id = $(\"#presentationUpload\" + group_id).attr(\"project-id\");\r\n    var dropzone_name = \"#presentationUpload\" + group_id;\r\n  } else if(this.id.indexOf(\"midtermMaterialsUpload\") !== -1) {\r\n    var resourceName = \"MidtermMaterials\";\r\n    var accepted = \"\";\r\n    var maxNumberOfFiles = 100;\r\n    var group_id = parseInt($(this).prop(\"id\").match(/\\d+/g), 10);\r\n\r\n    var project_id = $(\"#midtermMaterialsUpload\" + group_id).attr(\"project-id\");\r\n    var dropzone_name = \"#midtermMaterialsUpload\" + group_id;\r\n  }\r\n  else {\r\n    var resourceName = \"Materials\";\r\n    var accepted = \"\";\r\n    var maxNumberOfFiles = 100;\r\n    var group_id = parseInt($(this).prop(\"id\").match(/\\d+/g), 10);\r\n\r\n    var project_id = $(\"#materialsUpload\" + group_id).attr(\"project-id\");\r\n    var dropzone_name = \"#materialsUpload\" + group_id;\r\n  }\r\n\r\n  if (this.id.indexOf(\"midtermMaterialsUpload\") !== -1){\r\n    var routeTo = 'midterm';\r\n  } else if (this.getAttribute('auth') == 'student') {\r\n    var routeTo = 'finish';\r\n  } else {\r\n    var routeTo = 'project';\r\n  }\r\n\r\n  var myDropzone = new Dropzone(dropzone_name, {\r\n    url: window.Laravel.base_path + \"/\" + routeTo + \"/\" + project_id + \"/finish/upload\" + resourceName,\r\n    params: {\r\n      id: project_id,\r\n      _token: window.Laravel.csfr_token,\r\n      group_id: group_id\r\n    },\r\n    timeout: 0,\r\n    parallelUploads: 1,\r\n    paramName: \"file\",\r\n    acceptedFiles: accepted,\r\n    maxFiles: maxNumberOfFiles,\r\n    maxFilesize: 30, // MB\r\n\r\n    addRemoveLinks: true,\r\n\r\n    init: function () {\r\n\r\n\r\n      // Add server images\r\n      var myDropzone = this;\r\n\r\n      $.get(window.Laravel.base_path + \"/\" + routeTo + \"/\" + project_id + \"/api/group-\" + resourceName + \"?groupid=\" + group_id, function (data) {\r\n        $.each(data.images, function (key, value) {\r\n          var file = { name: value.filename, size: value.size };\r\n          myDropzone.emit(\"addedfile\", file);\r\n          // myDropzone.createThumbnailFromUrl(file, window.Laravel.base_path + \"/storage/projects_groups_images/\" + group_id + \"/\" + value.name);\r\n          myDropzone.emit(\"complete\", file);\r\n          var btndelete = file.previewElement.querySelector(\"[data-dz-remove]\");\r\n          btndelete.setAttribute(\"id\", 'delete-media-name-' + value.name);\r\n          \r\n          if(resourceName === \"Poster\"){\r\n            myDropzone.options.maxFiles = 0;\r\n          }\r\n          \r\n        });\r\n      });\r\n\r\n      myDropzone.on(\"maxfilesexceeded\", function(file) { \r\n        myDropzone.removeFile(file);\r\n        window.alert('You can only upload 1 poster!');\r\n      });\r\n\r\n      myDropzone.on(\"removedfile\", function (file) {\r\n\r\n        var btndelete = file.previewElement.querySelector(\"[data-dz-remove]\");\r\n        if (btndelete.hasAttribute(\"id\")) {\r\n          var filename = btndelete.getAttribute(\"id\").substr(18);\r\n\r\n          if(resourceName === \"Poster\"){\r\n            myDropzone.options.maxFiles = 1;\r\n          }\r\n        }\r\n\r\n        $.ajax({\r\n          url: window.Laravel.base_path + \"/\" + routeTo + \"/\" + project_id + \"/finish/delete\" + resourceName,\r\n          dataType: 'json',\r\n          delay: 250,\r\n          method: 'POST',\r\n          cache: false,\r\n          data: {\r\n\r\n            id: project_id,\r\n            name: filename,\r\n            group_id: group_id\r\n\r\n          }\r\n        }).done(function (msg) {\r\n\r\n        });\r\n\r\n      });\r\n    },\r\n    success: function (file, serverResponse) {\r\n      var btndelete = file.previewElement.querySelector(\"[data-dz-remove]\");\r\n      btndelete.setAttribute(\"id\", 'delete-media-name-' + serverResponse.gdrive_id + '.png');\r\n      window.alert('Upload successful');\r\n    }\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n  Sending DELETE request without a form\r\n  Example:\r\n  <a href=\"posts/2\" data-method=\"delete\" data-token=\"{{csrf_token()}}\">\r\n */\r\n\r\n(function () {\r\n\r\n  var laravel = {\r\n    initialize: function () {\r\n      this.methodLinks = $('a[data-method]');\r\n      this.token = $('a[data-token]');\r\n      this.registerEvents();\r\n    },\r\n\r\n    registerEvents: function () {\r\n      this.methodLinks.on('click', this.handleMethod);\r\n    },\r\n\r\n    handleMethod: function (e) {\r\n      var link = $(this);\r\n      var httpMethod = link.data('method').toUpperCase();\r\n      var form;\r\n\r\n      // If the data-method attribute is not PUT or DELETE,\r\n      // then we don't know what to do. Just ignore.\r\n      if ($.inArray(httpMethod, ['PUT', 'DELETE']) === - 1) {\r\n        return;\r\n      }\r\n\r\n      // Allow user to optionally provide data-confirm=\"Are you sure?\"\r\n      if (link.data('confirm')) {\r\n        if (!laravel.verifyConfirm(link)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      form = laravel.createForm(link);\r\n      form.submit();\r\n\r\n      e.preventDefault();\r\n    },\r\n\r\n    verifyConfirm: function (link) {\r\n      return confirm(link.data('confirm'));\r\n    },\r\n\r\n    createForm: function (link) {\r\n      var form =\r\n        $('<form>', {\r\n          'method': 'POST',\r\n          'action': link.attr('href')\r\n        });\r\n\r\n      var token =\r\n        $('<input>', {\r\n          'type': 'hidden',\r\n          'name': '_token',\r\n          'value': link.data('token')\r\n        });\r\n\r\n      var hiddenInput =\r\n        $('<input>', {\r\n          'name': '_method',\r\n          'type': 'hidden',\r\n          'value': link.data('method')\r\n        });\r\n\r\n      return form.append(token, hiddenInput)\r\n        .appendTo('body');\r\n    }\r\n  };\r\n\r\n  laravel.initialize();\r\n\r\n})();\r\n\r\n\r\n\r\n// Show or hide additional question input field\r\nvar add_question_field_button = document.querySelector('.add_question_field_button');\r\nvar remove_question_field_button = document.querySelector('.remove_question_field_button');\r\nvar extra_q = document.querySelectorAll('.extra_q');\r\nvar q_counter = -1; // -1 => no additional questions, 0 => one question, 1 => two questions\r\n\r\nif (extra_q.length !== 0) {\r\n  if (!extra_q[0].hasAttribute('hidden')) {\r\n    q_counter = 0;\r\n  }\r\n  if (!extra_q[1].hasAttribute('hidden')) {\r\n    q_counter = 1;\r\n  }\r\n\r\n  var handle_add_button_click = function () {\r\n    if (q_counter < 1) {\r\n      q_counter++;\r\n    }\r\n    extra_q[q_counter].hidden = false;\r\n  }\r\n\r\n  var handle_remove_button_click = function () {\r\n    if (q_counter > -1) {\r\n      extra_q[q_counter].hidden = true;\r\n      //remove user input\r\n      extra_q[q_counter].lastElementChild.firstElementChild.value = '';\r\n      q_counter--;\r\n    }\r\n  }\r\n  add_question_field_button.addEventListener('click', handle_add_button_click);\r\n  remove_question_field_button.addEventListener('click', handle_remove_button_click);\r\n}\r\n\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz84YjY3Il0sInNvdXJjZXNDb250ZW50IjpbImpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCQpIHtcclxuXHJcblxyXG4gICQuYWpheFNldHVwKHtcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgJ1gtQ1NSRi1UT0tFTic6ICQoJ21ldGFbbmFtZT1cImNzcmYtdG9rZW5cIl0nKS5hdHRyKCdjb250ZW50JylcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgLy8gRGF0ZSBwaWNrZXJcclxuICAkKCcjcHJvamVjdF9zdGFydCcpLmRhdGV0aW1lcGlja2VyKHtcclxuICAgIGZvcm1hdDogJ0wnXHJcbiAgfSk7XHJcblxyXG4gICQoJyNwcm9qZWN0X2VuZCcpLmRhdGV0aW1lcGlja2VyKHtcclxuICAgIGZvcm1hdDogJ0wnXHJcbiAgfSk7XHJcblxyXG4gICQoJyNqb2luX2RlYWRsaW5lJykuZGF0ZXRpbWVwaWNrZXIoe1xyXG4gICAgZm9ybWF0OiAnTCdcclxuICB9KTtcclxuXHJcbiAgJCgnLmV2YWx1YXRpb24tZGF0ZXMnKS5kYXRldGltZXBpY2tlcih7XHJcbiAgICBmb3JtYXQ6ICdMJ1xyXG4gIH0pO1xyXG5cclxuICAkKCcjcHJvamVjdF9zdGFydCcpLmRhdGV0aW1lcGlja2VyKCk7XHJcbiAgJCgnI3Byb2plY3RfZW5kJykuZGF0ZXRpbWVwaWNrZXIoe1xyXG4gICAgdXNlQ3VycmVudDogZmFsc2UgLy9JbXBvcnRhbnQhIFNlZSBpc3N1ZSAjMTA3NVxyXG4gIH0pO1xyXG4gICQoXCIjcHJvamVjdF9zdGFydFwiKS5vbihcImRwLmNoYW5nZVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgJCgnI3Byb2plY3RfZW5kJykuZGF0YShcIkRhdGVUaW1lUGlja2VyXCIpLm1pbkRhdGUoZS5kYXRlKTtcclxuICB9KTtcclxuICAkKFwiI3Byb2plY3RfZW5kXCIpLm9uKFwiZHAuY2hhbmdlXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAkKCcjcHJvamVjdF9zdGFydCcpLmRhdGEoXCJEYXRlVGltZVBpY2tlclwiKS5tYXhEYXRlKGUuZGF0ZSk7XHJcbiAgfSk7XHJcblxyXG5cclxuXHJcbiAgLy8gVGFncyBpbnB1dFxyXG4gICQoJ2lucHV0ICN0YWdzJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgdmFyICRlbGVtZW50ID0gJChldmVudC50YXJnZXQpLFxyXG4gICAgICAkY29udGFpbmVyID0gJGVsZW1lbnQuY2xvc2VzdCgnLmV4YW1wbGUnKTtcclxuXHJcbiAgICB2YXIgdmFsID0gJGVsZW1lbnQudmFsKCk7XHJcbiAgICBpZiAodmFsID09PSBudWxsKVxyXG4gICAgICB2YWwgPSBcIm51bGxcIjtcclxuICAgICQoJ2NvZGUnLCAkKCdwcmUudmFsJywgJGNvbnRhaW5lcikpLmh0bWwoKCQuaXNBcnJheSh2YWwpID8gSlNPTi5zdHJpbmdpZnkodmFsKSA6IFwiXFxcIlwiICsgdmFsLnJlcGxhY2UoJ1wiJywgJ1xcXFxcIicpICsgXCJcXFwiXCIpKTtcclxuICAgICQoJ2NvZGUnLCAkKCdwcmUuaXRlbXMnLCAkY29udGFpbmVyKSkuaHRtbChKU09OLnN0cmluZ2lmeSgkZWxlbWVudC50YWdzaW5wdXQoJ2l0ZW1zJykpKTtcclxuICB9KS50cmlnZ2VyKCdjaGFuZ2UnKTtcclxuXHJcblxyXG4gIC8vIFN3ZWV0IGFsZXJ0XHJcbiAgJChcImJ1dHRvbiNkZWxldGVcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG5cclxuICAgIHN3YWwoe1xyXG4gICAgICB0aXRsZTogd2luZG93LkxhcmF2ZWwuYXJlX3lvdV9zdXJlX25vdGlmaWNhdGlvbixcclxuICAgICAgdGV4dDogd2luZG93LkxhcmF2ZWwuY2Fubm90X3Jlc3RvcmVfbm90aWZpY2F0aW9uLFxyXG4gICAgICB0eXBlOiBcIndhcm5pbmdcIixcclxuICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcclxuICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiBcIiNERDZCNTVcIixcclxuICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHdpbmRvdy5MYXJhdmVsLnllc19kZWxldGUsXHJcbiAgICAgIGNhbmNlbEJ1dHRvblRleHQ6IHdpbmRvdy5MYXJhdmVsLm5vLFxyXG4gICAgICBjbG9zZU9uQ29uZmlybTogZmFsc2VcclxuICAgIH0sXHJcbiAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKGUudGFyZ2V0KS5wcmV2KCcuZGVsZXRlLXByb2plY3QnKS5zdWJtaXQoKTtcclxuXHJcbiAgICAgIH0pO1xyXG5cclxuICB9KTtcclxuXHJcblxyXG4gICQoXCJidXR0b24jZGVsZXRlLXVzZXItYnV0dG9uXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuXHJcbiAgICBzd2FsKHtcclxuICAgICAgdGl0bGU6IHdpbmRvdy5MYXJhdmVsLmFyZV95b3Vfc3VyZV9ub3RpZmljYXRpb24sXHJcbiAgICAgIHR5cGU6IFwid2FybmluZ1wiLFxyXG4gICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxyXG4gICAgICBjb25maXJtQnV0dG9uQ29sb3I6IFwiI0RENkI1NVwiLFxyXG4gICAgICBjb25maXJtQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwueWVzX2RlbGV0ZSxcclxuICAgICAgY2FuY2VsQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwubm8sXHJcbiAgICAgIGNsb3NlT25Db25maXJtOiBmYWxzZVxyXG4gICAgfSxcclxuICAgICAgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoZS50YXJnZXQpLnByZXYoJy5kZWxldGUtdXNlcicpLnN1Ym1pdCgpO1xyXG5cclxuICAgICAgfSk7XHJcblxyXG4gIH0pO1xyXG5cclxuXHJcbiAgJChcImEjZ3JvdXBzLWZpbmlzaC1idXR0b25cIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgaWYgKCEkKFwiYSNncm91cHMtZmluaXNoLWJ1dHRvblwiKS5oYXNDbGFzcygnbm90LWVtcHR5JykpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgc3dhbCh7XHJcbiAgICAgICAgdGl0bGU6IHdpbmRvdy5MYXJhdmVsLmZpbmlzaF9wcm9qZWN0X25vdGlmaWNhdGlvbixcclxuICAgICAgICB0eXBlOiBcImluZm9cIixcclxuICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwueWVzLFxyXG4gICAgICAgIGNsb3NlT25Db25maXJtOiBmYWxzZVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgJChcImJ1dHRvbiNqb2luLXByb2plY3QtYnV0dG9uXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGxldCB1c2VyX3RsdV9zdHVkZW50X2lkID0gbnVsbFxyXG4gICAgaWYgKHdpbmRvdy5MYXJhdmVsLnVzZXIudGx1X3N0dWRlbnRfaWQpIHtcclxuICAgICAgdXNlcl90bHVfc3R1ZGVudF9pZCA9IEpTT04ucGFyc2Uod2luZG93LkxhcmF2ZWwudXNlci50bHVfc3R1ZGVudF9pZClbMF1bMF0uc3BsaXQoXCJAXCIpWzBdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdXNlcl90bHVfc3R1ZGVudF9pZCA9IDA7XHJcbiAgICB9XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICB1cmw6IHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCArIFwiL29pc0pvaW5Db25maXJtYXRpb24/b3BwaWphSWQ9XCIgKyB1c2VyX3RsdV9zdHVkZW50X2lkICsgXCImYWluZWtvb2Q9WUlENjAwMS5ZTVwiLFxyXG4gICAgfSkuZG9uZShmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTtcclxuICAgICAgbGV0IHRleHRUb0Rpc3BsYXkgPSBcIkVMVSDDtXBwZWFpbmVnYSBsaWl0dW1pc2VrcyBrYXN1dGEgVEzDnCBrYXN1dGFqYWtvbnRvdCB2w7VpIGtpcmp1dGEgZWx1QHRsdS5lZSAvLyBUbyBqb2luIExJRkUgY291cnNlIHBsZWFzZSB1c2UgVExVIGFjY291bnQgb3IgY29udGFjdCBlbHVAdGx1LmVlXFxuXCI7XHJcbiAgICAgIGxldCBzaG93Q29uZmlybSA9IGZhbHNlO1xyXG4gICAgICBpZiAoZGF0YS5WaWdhKSB7XHJcbiAgICAgICAgdGV4dFRvRGlzcGxheSA9IGRhdGEuVmlnYTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAod2luZG93LkxhcmF2ZWwudXNlci50bHVfc3R1ZGVudF9pZCAhPSBudWxsKSB7XHJcbiAgICAgICAgICBsZXQgaW5mbyA9IFwiXCI7XHJcbiAgICAgICAgICBsZXQgYXR0ZW5kYWNlID0gXCJSZWdpc3RyZWVydWQgRUxVIMO1cHBlYWluZXNzZSBlc21ha29yZHNlbHQgLyBUaGlzIGlzIHlvdXIgZmlyc3QgcmVnaXN0cmF0aW9uIHRvIExJRkUgY291cnNlXFxuXCI7XHJcbiAgICAgICAgICBpZiAoZGF0YS5kZWtsYXJhdHNpb29uLm9uS29yZHV2ID09IHRydWUpIHtcclxuICAgICAgICAgICAgYXR0ZW5kYWNlID0gXCJPbGV0ZSBFTFUgw7VwcGVhaW5lIGp1YmEgbMOkYmludWQuIE9zYWxlbWlzZWtzIGtvbnRha3RlZXJ1Z2UgZWx1QHRsdS5lZSAvIElmIHlvdSB3YW50IHRvIGpvaW4gdG8gdGhlIExJRkUgY291cnNlIHNlY29uZCB0aW1lLCBwbGVhc2UgY29udGFjdCBMSUZFIGNvb3JkaW5hdG9ycyBlbHVAdGx1LmVlXFxuXCI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAoZGF0YS5kZWtsYXJhdHNpb29uLnRlYWRlICE9IG51bGwpIHtcclxuICAgICAgICAgICAgaW5mbyA9IFwiSW5mbzogXCIgKyBkYXRhLmRla2xhcmF0c2lvb24udGVhZGU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAoZGF0YS5kZWtsYXJhdHNpb29uLmhpbmQgPT0gMCkge1xyXG4gICAgICAgICAgICBwcmljZV9ldCA9IFwiVGFzdXRhIMO1cGVcIjtcclxuICAgICAgICAgICAgcHJpY2VfZW4gPSBcIlR1aXRpb24tZnJlZSBzdHVkeVwiO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcHJpY2VfZXQgPSBcIlRhc3VsaW5lIMO1cGVcIjtcclxuICAgICAgICAgICAgcHJpY2VfZW4gPSBcIlR1aXRpb24tYmFzZWQgc3R1ZHlcIjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGxldCBwcmljZSA9IHByaWNlX2VuICsgXCIvL1wiICsgcHJpY2VfZXQgKyBcIlxcblwiO1xyXG4gICAgICAgICAgdGV4dFRvRGlzcGxheSA9IGF0dGVuZGFjZSArIHByaWNlICsgaW5mbztcclxuICAgICAgICAgIGlmIChkYXRhLmRla2xhcmF0c2lvb24uc2FhYiA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIHNob3dDb25maXJtID0gdHJ1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgc3dhbCh7XHJcbiAgICAgICAgdGl0bGU6IHdpbmRvdy5MYXJhdmVsLmFyZV95b3Vfc3VyZV9ub3RpZmljYXRpb24sXHJcbiAgICAgICAgdGV4dDogdGV4dFRvRGlzcGxheSxcclxuICAgICAgICB0eXBlOiBcImluZm9cIixcclxuICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxyXG4gICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBzaG93Q29uZmlybSxcclxuICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6IFwiI0RENkI1NVwiLFxyXG4gICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB3aW5kb3cuTGFyYXZlbC55ZXMsXHJcbiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogXCJDYW5jZWxcIixcclxuICAgICAgICBjbG9zZU9uQ29uZmlybTogZmFsc2VcclxuICAgICAgfSxcclxuICAgICAgICBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAkKGUudGFyZ2V0KS5wcmV2KCcjam9pbi1wcm9qZWN0Jykuc3VibWl0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIC8qXHJcbiAgICBmZXRjaCh3aW5kb3cuTGFyYXZlbC5iYXNlX3BhdGgrXCIvb2lzSm9pbkNvbmZpcm1hdGlvbj9vcHBpamFJZD1cIitcIjkxOTgwXCIrXCImYWluZWtvb2Q9WUlENjAwMS5ZTVwiKVxyXG4gICAgLnRoZW4oZnVuY3Rpb24gKGRlY2xhcmF0aW9uKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZGVjbGFyYXRpb24pO1xyXG4gICAgICAgIHN3YWwoe1xyXG4gICAgICAgICAgICB0aXRsZTogd2luZG93LkxhcmF2ZWwuYXJlX3lvdV9zdXJlX25vdGlmaWNhdGlvbixcclxuICAgICAgICAgICAgdGV4dDogZGVjbGFyYXRpb24ucmVzcG9uc2UsXHJcbiAgICAgICAgICAgIHR5cGU6IFwiaW5mb1wiLFxyXG4gICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6IFwiI0RENkI1NVwiLFxyXG4gICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwueWVzLFxyXG4gICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiB3aW5kb3cuTGFyYXZlbC5ubyxcclxuICAgICAgICAgICAgY2xvc2VPbkNvbmZpcm06IGZhbHNlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKGUudGFyZ2V0KS5wcmV2KCcjam9pbi1wcm9qZWN0Jykuc3VibWl0KCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pO1xyXG4gICAgKi9cclxuXHJcblxyXG4gIH0pO1xyXG5cclxuICAvLyBTZWxlY3QyXHJcbiAgJChcIi5qcy1leGFtcGxlLWJhc2ljLW11bHRpcGxlXCIpLnNlbGVjdDIoKTtcclxuXHJcblxyXG5cclxuICAvLyBTZWxlY3QyIEFqYXggLSBhdHRhY2hpbmcgdXNlcnMgdG8gcHJvamVjdCB0ZWFtIG1hbnVhbGx5XHJcbiAgJChcIi5qcy11c2Vycy1kYXRhLWFqYXhcIikuc2VsZWN0Mih7XHJcbiAgICBwbGFjZWhvbGRlcjogd2luZG93LkxhcmF2ZWwubmFtZV9vcl9lbWFpbF9wbGFjZWhvbGRlcixcclxuICAgIGxhbmd1YWdlOiB7IGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdpbmRvdy5MYXJhdmVsLnRocmVlX29yX21vcmVfY2hhcjsgfSB9LFxyXG4gICAgYWxsb3dDbGVhcjogdHJ1ZSxcclxuICAgIGFqYXg6IHtcclxuICAgICAgdXJsOiB3aW5kb3cuTGFyYXZlbC5zZWFyY2hfdXNlcl9hcGlfdXJsLFxyXG4gICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICBkZWxheTogMjUwLFxyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgZGF0YTogZnVuY3Rpb24gKHBhcmFtcykge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBxOiBwYXJhbXMudGVybSwgLy8gc2VhcmNoIHRlcm1cclxuICAgICAgICAgIHByb2plY3RfaWQ6ICQoJy5qcy11c2Vycy1kYXRhLWFqYXgnKS5hdHRyKFwicHJvamVjdC1pZFwiKSxcclxuICAgICAgICAgIHBhZ2U6IHBhcmFtcy5wYWdlXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgICAgcHJvY2Vzc1Jlc3VsdHM6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHJlc3VsdHM6ICQubWFwKGRhdGEsIGZ1bmN0aW9uIChpdGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgdGV4dDogKGl0ZW0uZnVsbF9uYW1lID8gaXRlbS5mdWxsX25hbWUgOiBpdGVtLm5hbWUpICsgJyAoJyArIChpdGVtLmNvbnRhY3RfZW1haWwgPyBpdGVtLmNvbnRhY3RfZW1haWwgOiBpdGVtLmVtYWlsKSArICcpJyxcclxuICAgICAgICAgICAgICBpZDogaXRlbS5pZFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICAgIGNhY2hlOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCkgeyByZXR1cm4gbWFya3VwOyB9LCAvLyBsZXQgb3VyIGN1c3RvbSBmb3JtYXR0ZXIgd29ya1xyXG4gICAgbWluaW11bUlucHV0TGVuZ3RoOiAzXHJcbiAgfSk7XHJcblxyXG4gIC8vU21vb3RoIHNjcm9sbCBmb3IgZnJvbnQgcGFnZVxyXG4gICQoJ2JvZHkuZnJvbnRwYWdlIGFbaHJlZio9XCIjXCJdOm5vdChbaHJlZj1cIiNcIl0pJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL15cXC8vLCAnJykgPT0gdGhpcy5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgJycpICYmIGxvY2F0aW9uLmhvc3RuYW1lID09IHRoaXMuaG9zdG5hbWUpIHtcclxuICAgICAgdmFyIHRhcmdldCA9ICQodGhpcy5oYXNoKTtcclxuICAgICAgdGFyZ2V0ID0gdGFyZ2V0Lmxlbmd0aCA/IHRhcmdldCA6ICQoJ1tuYW1lPScgKyB0aGlzLmhhc2guc2xpY2UoMSkgKyAnXScpO1xyXG4gICAgICBpZiAodGFyZ2V0Lmxlbmd0aCkge1xyXG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcclxuICAgICAgICAgIHNjcm9sbFRvcDogdGFyZ2V0Lm9mZnNldCgpLnRvcFxyXG4gICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuXHJcblxyXG4gIC8vR28gZnJvbSBmcm9udCBwYWdlIHRvIGNlcnRhaW4gdGFiIGluIEZBUSBwYWdlXHJcbiAgdmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaDtcclxuICBpZiAoaGFzaC5zdGFydHNXaXRoKCcjaXRlbScpKSB7XHJcbiAgICBoYXNoICYmICQoJ3VsLm5hdiBhW2hyZWY9XCInICsgaGFzaCArICdcIl0nKS50YWIoJ3Nob3cnKTtcclxuICB9XHJcblxyXG4gIC8vIENoYW5nZSBwcm9qZWN0LXNlYXJjaCBwbGFjZWhvbGRlciBkeW5hbWljYWxseVxyXG4gIGxldCBzZWFyY2hEcm9wZG93biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtcHJvamVjdCAjc2VhcmNoX3BhcmFtJyk7XHJcbiAgc2VhcmNoRHJvcGRvd24uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlU2VhcmNoRmllbGRQbGFjZWhvbGRlcik7XHJcblxyXG4gIGZ1bmN0aW9uIHVwZGF0ZVNlYXJjaEZpZWxkUGxhY2Vob2xkZXIoKSB7XHJcbiAgICBsZXQgc2VhcmNoRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLXByb2plY3QgLnNlYXJjaC1pbnB1dCBpbnB1dCcpO1xyXG4gICAgXHJcbiAgICBpZih0aGlzLnZhbHVlID09PSAndGVybScpe1xyXG4gICAgICBzZWFyY2hGaWVsZC5wbGFjZWhvbGRlciA9IHRyYW5zLnNlYXJjaC5lbnRlcl95ZWFyX2FuZF9zZW1lc3RlcjtcclxuICAgIH1lbHNle1xyXG4gICAgICBzZWFyY2hGaWVsZC5wbGFjZWhvbGRlciA9IHRyYW5zLnNlYXJjaC5lbnRlcl9uYW1lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIC8vUGFuZWwgdXNlZCBpbiBzZWFyY2ggdmlldyB0byBzaG93IGEgbGlzdCBvZiBtZW1iZXIgZW1haWxzXHJcbiAgJCgnLnBhbmVsLWhlYWRpbmcgc3Bhbi5jbGlja2FibGUnKS5wYXJlbnRzKCcucGFuZWwnKS5maW5kKCcucGFuZWwtYm9keScpLnNsaWRlVXAoKTtcclxuXHJcbiAgJCgnLnBhbmVsLWhlYWRpbmcgc3Bhbi5jbGlja2FibGUnKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgaWYgKCEkdGhpcy5oYXNDbGFzcygncGFuZWwtY29sbGFwc2VkJykpIHtcclxuICAgICAgJHRoaXMucGFyZW50cygnLnBhbmVsJykuZmluZCgnLnBhbmVsLWJvZHknKS5zbGlkZVVwKCk7XHJcbiAgICAgICR0aGlzLmFkZENsYXNzKCdwYW5lbC1jb2xsYXBzZWQnKTtcclxuICAgICAgJHRoaXMuZmluZCgnaScpLnJlbW92ZUNsYXNzKCdnbHlwaGljb24tY2hldnJvbi11cCcpLmFkZENsYXNzKCdnbHlwaGljb24tY2hldnJvbi1kb3duJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAkdGhpcy5wYXJlbnRzKCcucGFuZWwnKS5maW5kKCcucGFuZWwtYm9keScpLnNsaWRlRG93bigpO1xyXG4gICAgICAkdGhpcy5yZW1vdmVDbGFzcygncGFuZWwtY29sbGFwc2VkJyk7XHJcbiAgICAgICR0aGlzLmZpbmQoJ2knKS5yZW1vdmVDbGFzcygnZ2x5cGhpY29uLWNoZXZyb24tZG93bicpLmFkZENsYXNzKCdnbHlwaGljb24tY2hldnJvbi11cCcpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuXHJcbiAgLy9GYWNlYm9vayBzaGFyaW5nIGJ1dHRvbiBoYW5kbGVyLCBGYWNlYm9vayBTREsgZm9yIEphdmFTY3JpcHRcclxuICBmdW5jdGlvbiBwb3N0VG9GZWVkKHVybCkge1xyXG4gICAgdmFyIG9iaiA9IHsgbWV0aG9kOiAnZmVlZCcsIGxpbms6IHVybCB9O1xyXG4gICAgZnVuY3Rpb24gY2FsbGJhY2socmVzcG9uc2UpIHsgfVxyXG4gICAgRkIudWkob2JqLCBjYWxsYmFjayk7XHJcbiAgfVxyXG5cclxuICAkKCcuYnRuU2hhcmUnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICBlbGVtID0gJCh0aGlzKTtcclxuICAgIHBvc3RUb0ZlZWQoZWxlbS5wcm9wKCdocmVmJykpO1xyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9KTtcclxuXHJcblxyXG4gIC8vVGlueU1DXHJcbiAgdGlueU1DRS5iYXNlVVJMID0gd2luZG93LkxhcmF2ZWwuYmFzZV9wYXRoICsgXCIvanMvdGlueW1jZVwiO1xyXG5cclxuICB0aW55bWNlLmluaXQoe1xyXG4gICAgbW9kZTogXCJ0ZXh0YXJlYXNcIixcclxuICAgIHRoZW1lOiBcIm1vZGVyblwiLFxyXG4gICAgbGFuZ3VhZ2U6IHdpbmRvdy5MYXJhdmVsLmxhbmd1YWdlLFxyXG4gICAgcGx1Z2luczogW1wibGlua1wiLCBcInBhc3RlXCJdLFxyXG4gICAgbWVudWJhcjogZmFsc2UsXHJcbiAgICB0b29sYmFyOiBcImxpbmtcIixcclxuICAgIHJlbW92ZWZvcm1hdDogW1xyXG4gICAgICB7IHNlbGVjdG9yOiAnYixzdHJvbmcsZW0saSxmb250LHUsc3RyaWtlJywgcmVtb3ZlOiAnYWxsJywgc3BsaXQ6IHRydWUsIGV4cGFuZDogZmFsc2UsIGJsb2NrX2V4cGFuZDogdHJ1ZSwgZGVlcDogdHJ1ZSB9LFxyXG4gICAgICB7IHNlbGVjdG9yOiAnc3BhbicsIGF0dHJpYnV0ZXM6IFsnc3R5bGUnLCAnY2xhc3MnXSwgcmVtb3ZlOiAnZW1wdHknLCBzcGxpdDogdHJ1ZSwgZXhwYW5kOiBmYWxzZSwgZGVlcDogdHJ1ZSB9LFxyXG4gICAgICB7IHNlbGVjdG9yOiAnKicsIGF0dHJpYnV0ZXM6IFsnc3R5bGUnLCAnY2xhc3MnXSwgc3BsaXQ6IGZhbHNlLCBleHBhbmQ6IGZhbHNlLCBkZWVwOiB0cnVlLCB9XHJcbiAgICBdLFxyXG4gICAgc2VsZWN0aW9uX3Rvb2xiYXI6ICdib2xkIGl0YWxpYyB8IHF1aWNrbGluayBoMiBoMyBibG9ja3F1b3RlJyxcclxuICAgIGVkaXRvcl9zZWxlY3RvcjogXCJtY2VTaW1wbGVMaW5rXCIsXHJcbiAgICBwYXN0ZV9hc190ZXh0OiB0cnVlXHJcbiAgfSk7XHJcblxyXG4gIHRpbnlNQ0UuaW5pdCh7XHJcbiAgICBtb2RlOiBcInRleHRhcmVhc1wiLFxyXG4gICAgbGFuZ3VhZ2U6IHdpbmRvdy5MYXJhdmVsLmxhbmd1YWdlLFxyXG4gICAgcGx1Z2luczogW1wibGlua1wiLCBcImxpc3RzXCIsIFwicGFzdGVcIiwgXCJub25lZGl0YWJsZVwiLCBcInByZXZlbnRkZWxldGVcIl0sXHJcbiAgICBoZWlnaHQ6IFwiMzUwXCIsXHJcbiAgICByZW1vdmVmb3JtYXQ6IFtcclxuICAgICAgeyBzZWxlY3RvcjogJ2Isc3Ryb25nLGVtLGksZm9udCx1LHN0cmlrZScsIHJlbW92ZTogJ2FsbCcsIHNwbGl0OiB0cnVlLCBleHBhbmQ6IGZhbHNlLCBibG9ja19leHBhbmQ6IHRydWUsIGRlZXA6IHRydWUgfSxcclxuICAgICAgeyBzZWxlY3RvcjogJ3NwYW4nLCBhdHRyaWJ1dGVzOiBbJ3N0eWxlJywgJ2NsYXNzJ10sIHJlbW92ZTogJ2VtcHR5Jywgc3BsaXQ6IHRydWUsIGV4cGFuZDogZmFsc2UsIGRlZXA6IHRydWUgfSxcclxuICAgICAgeyBzZWxlY3RvcjogJyonLCBhdHRyaWJ1dGVzOiBbJ3N0eWxlJywgJ2NsYXNzJ10sIHNwbGl0OiBmYWxzZSwgZXhwYW5kOiBmYWxzZSwgZGVlcDogdHJ1ZSB9XHJcbiAgICBdLFxyXG4gICAgdG9vbGJhcjogXCJyZWRvIHVuZG8gYm9sZCBpdGFsaWMgbnVtbGlzdCBidWxsaXN0IGxpbmtcIixcclxuICAgIG1lbnViYXI6IGZhbHNlLFxyXG4gICAgZWRpdG9yX3NlbGVjdG9yOiBcIm1jZVNpbXBsZVwiLFxyXG4gICAgcGFzdGVfYXNfdGV4dDogdHJ1ZVxyXG4gIH0pO1xyXG5cclxuICAkKCcjc3VibWl0LXByb2plY3QtYnV0dG9uJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRpbnlNQ0UudHJpZ2dlclNhdmUoKTtcclxuICAgIGlmICh0aW55TUNFLmdldCgncHJvamVjdF9vdXRjb21lcycpLmdldENvbnRlbnQoKSAhPSAnJykge1xyXG4gICAgICB0aW55TUNFLmdldCgncHJvamVjdF9vdXRjb21lcycpLnNldENvbnRlbnQocmVtb3ZlRXhjZXNzV2hpdGVzcGFjZUZyb21TdHJpbmcodGlueU1DRS5nZXQoJ3Byb2plY3Rfb3V0Y29tZXMnKS5nZXRDb250ZW50KCkuc3BsaXQoJyZuYnNwOycpLmpvaW4oJyAnKSkpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRpbnlNQ0UuZ2V0KCdub3ZlbHR5X2Rlc2MnKS5nZXRDb250ZW50KCkgIT0gJycpIHtcclxuICAgICAgdGlueU1DRS5nZXQoJ25vdmVsdHlfZGVzYycpLnNldENvbnRlbnQocmVtb3ZlRXhjZXNzV2hpdGVzcGFjZUZyb21TdHJpbmcodGlueU1DRS5nZXQoJ25vdmVsdHlfZGVzYycpLmdldENvbnRlbnQoKS5zcGxpdCgnJm5ic3A7Jykuam9pbignICcpKSk7XHJcbiAgICB9XHJcbiAgICBpZiAodGlueU1DRS5nZXQoJ2FpbScpLmdldENvbnRlbnQoKSAhPSAnJykge1xyXG4gICAgICB0aW55TUNFLmdldCgnYWltJykuc2V0Q29udGVudChyZW1vdmVFeGNlc3NXaGl0ZXNwYWNlRnJvbVN0cmluZyh0aW55TUNFLmdldCgnYWltJykuZ2V0Q29udGVudCgpLnNwbGl0KCcmbmJzcDsnKS5qb2luKCcgJykpKTtcclxuICAgIH1cclxuICAgIGlmICh0aW55TUNFLmdldCgnZGVzY3JpcHRpb24nKS5nZXRDb250ZW50KCkgIT0gJycpIHtcclxuICAgICAgdGlueU1DRS5nZXQoJ2Rlc2NyaXB0aW9uJykuc2V0Q29udGVudChyZW1vdmVFeGNlc3NXaGl0ZXNwYWNlRnJvbVN0cmluZyh0aW55TUNFLmdldCgnZGVzY3JpcHRpb24nKS5nZXRDb250ZW50KCkuc3BsaXQoJyZuYnNwOycpLmpvaW4oJyAnKSkpO1xyXG4gICAgfVxyXG4gICAgdGlueU1DRS50cmlnZ2VyU2F2ZSgpO1xyXG4gICAgJCgnI3Byb2plY3QtZm9ybScpLnN1Ym1pdCgpO1xyXG4gIH0pO1xyXG5cclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlRXhjZXNzV2hpdGVzcGFjZUZyb21TdHJpbmcoc3RyaW5nKSB7XHJcbiAgICB2YXIgc3RyaW5nTGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcclxuICAgIHZhciBvdXRwdXRTdHJpbmcgPSBcIlwiO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmdMZW5ndGggLSAxOyBpKyspIHtcclxuICAgICAgaWYgKCEoc3RyaW5nW2ldID09PSBcIiBcIiAmJiBzdHJpbmdbaSArIDFdID09PSBcIiBcIikpIHtcclxuICAgICAgICBvdXRwdXRTdHJpbmcgKz0gc3RyaW5nW2ldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoc3RyaW5nW3N0cmluZ0xlbmd0aF0gIT09IFwiIFwiKSB7XHJcbiAgICAgIG91dHB1dFN0cmluZyArPSBzdHJpbmdbc3RyaW5nTGVuZ3RoIC0gMV1cclxuICAgIH1cclxuICAgIC8vIFJlbW92aW5nIGVtcHR5IHRhZ3NcclxuICAgIHZhciBoZWxwZXIgPSAkKCc8ZGl2PicpLmFwcGVuZChvdXRwdXRTdHJpbmcpO1xyXG4gICAgcmVtb3ZlRW1wdHlJZk5vQ2hpbGRyZW4oaGVscGVyKTtcclxuICAgIG91dHB1dFN0cmluZyA9IGhlbHBlci5wcm9wKCdpbm5lckhUTUwnKTtcclxuICAgIHJldHVybiBvdXRwdXRTdHJpbmc7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZW1vdmVFbXB0eUlmTm9DaGlsZHJlbihlbGVtZW50KSB7XHJcbiAgICBpZiAoZWxlbWVudC5jaGlsZHJlbigpLmxlbmd0aCA+IDApIHtcclxuICAgICAgZWxlbWVudC5jaGlsZHJlbigpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJlbW92ZUVtcHR5SWZOb0NoaWxkcmVuKCQodGhpcykpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIGlmIChlbGVtZW50Lmh0bWwoKSA9PT0gXCJcIikge1xyXG4gICAgICBlbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9Gcm9udCBwYWdlIGxvZ28gdHJhbnNsYXRpb25cclxuICBpZiAod2luZG93LkxhcmF2ZWwubGFuZ3VhZ2UgPT0gJ2VuJykge1xyXG4gICAgJCgnLmJsb2NrMDEuYmxvY2swMWIgPiAucGFkJykuY3NzKFwiYmFja2dyb3VuZFwiLCAndXJsKGNzcy9iZzA1X2VuLnBuZykgbm8tcmVwZWF0IDUwJSA1MCUnKTtcclxuICB9IGVsc2Uge1xyXG4gICAgJCgnLmJsb2NrMDEuYmxvY2swMWIgPiAucGFkJykuY3NzKFwiYmFja2dyb3VuZFwiLCAndXJsKGNzcy9iZzA1LnBuZykgbm8tcmVwZWF0IDUwJSA1MCUnKTtcclxuICB9XHJcblxyXG5cclxuICAvL1NlbGVjdCBwcm9qZWN0IHNoYXJlIHVybCBvbiBjbGljayBvbiBpbnB1dFxyXG4gICQoXCJpbnB1dFtuYW1lPSdzaGFyZV91cmwnXVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICQodGhpcykuc2VsZWN0KCk7XHJcbiAgfSk7XHJcblxyXG5cclxuICBpZiAoJChcIiNwcm9qZWN0X2FsbF9tZW1iZXJzXCIpLmxlbmd0aCkge1xyXG5cclxuICAgIC8vUHJvamVjdCBpZCB1c2VkIGJ5IFByb2plY3RNb2RlcmF0b3IgbWlkZGxld2FyZVxyXG4gICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTtcclxuICAgIHZhciBzZWdtZW50cyA9IHVybC5zcGxpdCgnLycpO1xyXG4gICAgdmFyIHByb2plY3RfaWQgPSBzZWdtZW50c1tzZWdtZW50cy5sZW5ndGggLSAyXTtcclxuXHJcblxyXG4gICAgLy9EcmFnIGFuZCBkcm9wIHByb2plY3QgZ3JvdXAgbWVtYmVycyBmdW5jdGlvbmFsaXR5XHJcbiAgICBTb3J0YWJsZS5jcmVhdGUocHJvamVjdF9hbGxfbWVtYmVycywge1xyXG4gICAgICBncm91cDogeyBuYW1lOiBcInByb2plY3QtYWxsLW1lbWJlcnNcIiwgcHVsbDogdHJ1ZSwgcHV0OiB0cnVlIH0sXHJcbiAgICAgIGFuaW1hdGlvbjogMTUwLFxyXG4gICAgICBoYW5kbGU6ICcuZHJhZy1oYW5kbGUnXHJcbiAgICB9KTtcclxuXHJcbiAgICB2YXIgZWwgPSAkKCcucHJvamVjdC1ncm91cCcpO1xyXG4gICAgJChlbCkuZWFjaChmdW5jdGlvbiAoaSwgZSkge1xyXG4gICAgICB2YXIgc29ydGFibGUgPSBTb3J0YWJsZS5jcmVhdGUoZSwge1xyXG4gICAgICAgIGdyb3VwOiB7XHJcbiAgICAgICAgICBuYW1lOiBlbC5hdHRyKCdncm91cC1pZCcpLFxyXG4gICAgICAgICAgcHVsbDogdHJ1ZSxcclxuICAgICAgICAgIHB1dDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGFuaW1hdGlvbjogMTUwLFxyXG4gICAgICAgIGhhbmRsZTogJy5kcmFnLWhhbmRsZScsXHJcbiAgICAgICAgb25BZGQ6IGZ1bmN0aW9uIChldnQpIHtcclxuXHJcbiAgICAgICAgICB2YXIgaXRlbUVsID0gZXZ0Lml0ZW07ICAvLyBkcmFnZ2VkIEhUTUxFbGVtZW50XHJcbiAgICAgICAgICB2YXIgZnJvbSA9IGV2dC5mcm9tO1xyXG5cclxuXHJcbiAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IHdpbmRvdy5MYXJhdmVsLmFkZF91c2VyX3RvX2dyb3VwX2FwaV91cmwsXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICAgIGRlbGF5OiAyNTAsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGRhdGE6IHtcclxuXHJcbiAgICAgICAgICAgICAgaWQ6IHByb2plY3RfaWQsXHJcbiAgICAgICAgICAgICAgdG86ICQoaXRlbUVsKS5wYXJlbnQoKS5hdHRyKCdncm91cC1pZCcpLFxyXG4gICAgICAgICAgICAgIGZyb206ICQoZnJvbSkuYXR0cignZ3JvdXAtaWQnKSxcclxuICAgICAgICAgICAgICB1c2VyOiAkKGl0ZW1FbCkuYXR0cigndXNlci1pZCcpXHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uIChtc2cpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cobXNnKTtcclxuICAgICAgICAgICAgaWYgKCQoJ2EjZ3JvdXBzLWZpbmlzaC1idXR0b24nKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAkKCdhI2dyb3Vwcy1maW5pc2gtYnV0dG9uJykuYWRkQ2xhc3MoJ25vdC1lbXB0eScpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICB9KTtcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuXHJcbiAgLy9Db3B5IHVzZXIgbWFpbiBUTFUgZW1haWwgaW50byBjb250YWN0IGVtYWlsIGZpZWxkcywgdXNlZCBvbiBwcm9maWxlIHBhZ2VcclxuICAkKFwiI2ZpbGxlclwiKS5jbGljayhmaWxsVmFsdWVzKTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIGZpbGxWYWx1ZXMoKSB7XHJcbiAgICB2YXIgdmFsdWUgPSAkKFwiI3RsdV9lbWFpbFwiKS52YWwoKTtcclxuICAgIHZhciBmaWVsZHMgPSAkKFwiLmNvbnRhY3QtZW1haWxcIik7XHJcbiAgICBmaWVsZHMuZWFjaChmdW5jdGlvbiAoaSkge1xyXG4gICAgICAkKHRoaXMpLnZhbCh2YWx1ZSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG5cclxuXHJcbiAgLy9BZGQgY3VzdG9tIGluc3RpdHV0aW9uIGZpZWxkIGluIHVzZXIgcmVnaXN0cmF0aW9uIGZvcm1cclxuICAkKCcjaW5zdGl0dXRpb24nKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCQodGhpcykudmFsKCkgPT09IHdpbmRvdy5MYXJhdmVsLm90aGVyX2luc3RpdHV0aW9uKSB7XHJcbiAgICAgICQoXCIjb3RoZXItaW5zdGl0dXRpb25cIikuc2hvdygpXHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgJChcIiNvdGhlci1pbnN0aXR1dGlvblwiKS5oaWRlKClcclxuICAgIH1cclxuICB9KTtcclxuXHJcblxyXG5cclxuXHJcbiAgLy8gQWRkIG5ldyBncm91cCBsaW5rcyBpbnB1dCBmaWVsZFxyXG4gIHZhciBhZGRfbGlua3NfZmllbGRfYnV0dG9ucyA9ICQoXCIuYWRkX2xpbmtzX2ZpZWxkX2J1dHRvblwiKTtcclxuXHJcbiAgYWRkX2xpbmtzX2ZpZWxkX2J1dHRvbnMuZWFjaChmdW5jdGlvbiAoaSwgb2JqKSB7XHJcbiAgICB2YXIgZ3JvdXBfaWQgPSAkKG9iaikuYXR0cihcImdyb3VwLWlkXCIpO1xyXG4gICAgJChvYmopLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdmFyICRkaXYgPSAkKHRoaXMpLm5leHQoXCIuZ3JvdXAtbWF0ZXJpYWxzXCIpLmNoaWxkcmVuKCkubGFzdCgpO1xyXG5cclxuICAgICAgdmFyIG51bSA9ICRkaXYucHJvcChcImlkXCIpO1xyXG5cclxuICAgICAgbnVtID0gcGFyc2VJbnQobnVtLnNwbGl0KFwiX1wiKS5wb3AoKSk7XHJcblxyXG5cclxuICAgICAgdmFyIGNsb25lID0gJCgkZGl2KS5jbG9uZSgpO1xyXG4gICAgICBjbG9uZS5wcm9wKCdpZCcsICdncm91cF9tYXRlcmlhbHNfJyArIGdyb3VwX2lkICsgJ18nICsgKG51bSArIDEpKTtcclxuICAgICAgY2xvbmUuZmluZChcImlucHV0XCIpLnZhbChcIlwiKTtcclxuICAgICAgY2xvbmUuaW5zZXJ0QWZ0ZXIoJGRpdik7XHJcblxyXG4gICAgICB2YXIgdGFnc2lucHV0ID0gY2xvbmUuZmluZCgnLnRhZ3MnKTtcclxuICAgICAgY2xvbmUuZmluZCgnLmJvb3RzdHJhcC10YWdzaW5wdXQnKS5yZW1vdmUoKTtcclxuXHJcbiAgICAgICQodGFnc2lucHV0KS5hdHRyKCduYW1lJywgJ2dyb3VwX21hdGVyaWFsX3RhZ3NbJyArIGdyb3VwX2lkICsgJ11bXScpO1xyXG4gICAgICAkKHRhZ3NpbnB1dCkuYWRkQ2xhc3MoJ2Zvcm0tY29udHJvbCB0YWdzJyk7XHJcbiAgICAgIHRhZ3NpbnB1dC50YWdzaW5wdXQoKTtcclxuICAgICAgdGFnc2lucHV0LnRhZ3NpbnB1dCgncmVtb3ZlQWxsJyk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuICAgIH0pO1xyXG5cclxuICB9KTtcclxuXHJcblxyXG5cclxuXHJcbiAgLy8gUmVtb3ZlIGdyb3VwIGxpbmtzIGlucHV0IGZpZWxkXHJcbiAgdmFyIHJlbW92ZV9saW5rc19maWVsZF9idXR0b24gPSAkKFwiLnJlbW92ZV9saW5rc19maWVsZF9idXR0b25cIik7XHJcblxyXG4gIHJlbW92ZV9saW5rc19maWVsZF9idXR0b24uZWFjaChmdW5jdGlvbiAoaSwgb2JqKSB7XHJcbiAgICB2YXIgZ3JvdXBfaWQgPSAkKG9iaikuYXR0cihcImdyb3VwLWlkXCIpO1xyXG4gICAgJChvYmopLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcblxyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHZhciAkZGl2ID0gJCh0aGlzKS5wYXJlbnQoKS5jaGlsZHJlbihcIjpsYXN0LWNoaWxkXCIpO1xyXG5cclxuICAgICAgdmFyIG51bSA9ICRkaXYucHJvcChcImlkXCIpO1xyXG5cclxuICAgICAgbnVtID0gcGFyc2VJbnQobnVtLnNwbGl0KFwiX1wiKS5wb3AoKSk7XHJcblxyXG4gICAgICBpZiAobnVtID4gMCkge1xyXG4gICAgICAgICRkaXYucmVtb3ZlKCk7XHJcbiAgICAgIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuXHJcblxyXG4gICQoJ1tkYXRhLXRvZ2dsZT1cInBvcG92ZXJcIl0nKS5wb3BvdmVyKCk7XHJcblxyXG5cclxuICAkKCcjY2xlYXItZW1iZWRkZWQnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAkKCcjZW1iZWRkZWQnKVxyXG4gICAgICAudmFsKCcnKVxyXG4gIH0pO1xyXG5cclxuXHJcbiAgJCgnI2NsZWFyLWdyb3VwLWVtYmVkZGVkJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgJCh0aGlzKS5wcmV2KCdpbnB1dCcpLnZhbCgnJyk7XHJcbiAgfSk7XHJcblxyXG5cclxuICAkKCdib2R5JykudG9vbHRpcCh7XHJcbiAgICBzZWxlY3RvcjogJ1tyZWw9XCJ0b29sdGlwXCJdJ1xyXG4gIH0pO1xyXG5cclxuXHJcbiAgLy9Hcm91cCB0aXRsZSByZW5hbWluZztcclxuICAkKCcuZ3JvdXAtbmFtZScpLmVkaXRhYmxlKHtcclxuICAgIHNlbmQ6ICdhbHdheXMnLFxyXG4gICAgYWpheE9wdGlvbnM6IHtcclxuICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgdHlwZTogJ3Bvc3QnLFxyXG5cclxuICAgIH0sXHJcbiAgICBwYXJhbXM6IGZ1bmN0aW9uIChwYXJhbXMpIHtcclxuICAgICAgLy9vcmlnaW5hbGx5IHBhcmFtcyBjb250YWluIHBrLCBuYW1lIGFuZCB2YWx1ZVxyXG4gICAgICBwYXJhbXMuaWQgPSAkKHRoaXMpLmNsb3Nlc3QoXCJkaXZcIikuYXR0cihcInByb2plY3QtaWRcIik7XHJcbiAgICAgIHJldHVybiBwYXJhbXM7XHJcbiAgICB9XHJcblxyXG4gIH0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbn0pO1xyXG5cclxuRHJvcHpvbmUuYXV0b0Rpc2NvdmVyID0gZmFsc2U7XHJcbkRyb3B6b25lLnByb3RvdHlwZS5kZWZhdWx0T3B0aW9ucy5kaWN0UmVtb3ZlRmlsZSA9IHdpbmRvdy5MYXJhdmVsLnJlbW92ZV9maWxlX2J1dHRvbjtcclxuRHJvcHpvbmUucHJvdG90eXBlLmRlZmF1bHRPcHRpb25zLmRpY3RDYW5jZWxVcGxvYWQgPSAnVXBsb2FkaW5nJztcclxuXHJcbnZhciBkcm9wem9uZXMgPSAkKFwiLmRyb3B6b25lXCIpO1xyXG5kcm9wem9uZXMuZWFjaChmdW5jdGlvbiAoaSkge1xyXG4gIGlmICh0aGlzLmlkLmluZGV4T2YoXCJwcmVzZW50YXRpb25VcGxvYWRcIikgIT09IC0xKSB7XHJcbiAgICB2YXIgcmVzb3VyY2VOYW1lID0gXCJQb3N0ZXJcIjtcclxuICAgIHZhciBhY2NlcHRlZCA9IFwiYXBwbGljYXRpb24vcGRmXCI7XHJcbiAgICB2YXIgbWF4TnVtYmVyT2ZGaWxlcyA9IDE7XHJcbiAgICB2YXIgZ3JvdXBfaWQgPSBwYXJzZUludCgkKHRoaXMpLnByb3AoXCJpZFwiKS5tYXRjaCgvXFxkKy9nKSwgMTApO1xyXG5cclxuICAgIHZhciBwcm9qZWN0X2lkID0gJChcIiNwcmVzZW50YXRpb25VcGxvYWRcIiArIGdyb3VwX2lkKS5hdHRyKFwicHJvamVjdC1pZFwiKTtcclxuICAgIHZhciBkcm9wem9uZV9uYW1lID0gXCIjcHJlc2VudGF0aW9uVXBsb2FkXCIgKyBncm91cF9pZDtcclxuICB9IGVsc2UgaWYodGhpcy5pZC5pbmRleE9mKFwibWlkdGVybU1hdGVyaWFsc1VwbG9hZFwiKSAhPT0gLTEpIHtcclxuICAgIHZhciByZXNvdXJjZU5hbWUgPSBcIk1pZHRlcm1NYXRlcmlhbHNcIjtcclxuICAgIHZhciBhY2NlcHRlZCA9IFwiXCI7XHJcbiAgICB2YXIgbWF4TnVtYmVyT2ZGaWxlcyA9IDEwMDtcclxuICAgIHZhciBncm91cF9pZCA9IHBhcnNlSW50KCQodGhpcykucHJvcChcImlkXCIpLm1hdGNoKC9cXGQrL2cpLCAxMCk7XHJcblxyXG4gICAgdmFyIHByb2plY3RfaWQgPSAkKFwiI21pZHRlcm1NYXRlcmlhbHNVcGxvYWRcIiArIGdyb3VwX2lkKS5hdHRyKFwicHJvamVjdC1pZFwiKTtcclxuICAgIHZhciBkcm9wem9uZV9uYW1lID0gXCIjbWlkdGVybU1hdGVyaWFsc1VwbG9hZFwiICsgZ3JvdXBfaWQ7XHJcbiAgfVxyXG4gIGVsc2Uge1xyXG4gICAgdmFyIHJlc291cmNlTmFtZSA9IFwiTWF0ZXJpYWxzXCI7XHJcbiAgICB2YXIgYWNjZXB0ZWQgPSBcIlwiO1xyXG4gICAgdmFyIG1heE51bWJlck9mRmlsZXMgPSAxMDA7XHJcbiAgICB2YXIgZ3JvdXBfaWQgPSBwYXJzZUludCgkKHRoaXMpLnByb3AoXCJpZFwiKS5tYXRjaCgvXFxkKy9nKSwgMTApO1xyXG5cclxuICAgIHZhciBwcm9qZWN0X2lkID0gJChcIiNtYXRlcmlhbHNVcGxvYWRcIiArIGdyb3VwX2lkKS5hdHRyKFwicHJvamVjdC1pZFwiKTtcclxuICAgIHZhciBkcm9wem9uZV9uYW1lID0gXCIjbWF0ZXJpYWxzVXBsb2FkXCIgKyBncm91cF9pZDtcclxuICB9XHJcblxyXG4gIGlmICh0aGlzLmlkLmluZGV4T2YoXCJtaWR0ZXJtTWF0ZXJpYWxzVXBsb2FkXCIpICE9PSAtMSl7XHJcbiAgICB2YXIgcm91dGVUbyA9ICdtaWR0ZXJtJztcclxuICB9IGVsc2UgaWYgKHRoaXMuZ2V0QXR0cmlidXRlKCdhdXRoJykgPT0gJ3N0dWRlbnQnKSB7XHJcbiAgICB2YXIgcm91dGVUbyA9ICdmaW5pc2gnO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2YXIgcm91dGVUbyA9ICdwcm9qZWN0JztcclxuICB9XHJcblxyXG4gIHZhciBteURyb3B6b25lID0gbmV3IERyb3B6b25lKGRyb3B6b25lX25hbWUsIHtcclxuICAgIHVybDogd2luZG93LkxhcmF2ZWwuYmFzZV9wYXRoICsgXCIvXCIgKyByb3V0ZVRvICsgXCIvXCIgKyBwcm9qZWN0X2lkICsgXCIvZmluaXNoL3VwbG9hZFwiICsgcmVzb3VyY2VOYW1lLFxyXG4gICAgcGFyYW1zOiB7XHJcbiAgICAgIGlkOiBwcm9qZWN0X2lkLFxyXG4gICAgICBfdG9rZW46IHdpbmRvdy5MYXJhdmVsLmNzZnJfdG9rZW4sXHJcbiAgICAgIGdyb3VwX2lkOiBncm91cF9pZFxyXG4gICAgfSxcclxuICAgIHRpbWVvdXQ6IDAsXHJcbiAgICBwYXJhbGxlbFVwbG9hZHM6IDEsXHJcbiAgICBwYXJhbU5hbWU6IFwiZmlsZVwiLFxyXG4gICAgYWNjZXB0ZWRGaWxlczogYWNjZXB0ZWQsXHJcbiAgICBtYXhGaWxlczogbWF4TnVtYmVyT2ZGaWxlcyxcclxuICAgIG1heEZpbGVzaXplOiAzMCwgLy8gTUJcclxuXHJcbiAgICBhZGRSZW1vdmVMaW5rczogdHJ1ZSxcclxuXHJcbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcblxyXG5cclxuICAgICAgLy8gQWRkIHNlcnZlciBpbWFnZXNcclxuICAgICAgdmFyIG15RHJvcHpvbmUgPSB0aGlzO1xyXG5cclxuICAgICAgJC5nZXQod2luZG93LkxhcmF2ZWwuYmFzZV9wYXRoICsgXCIvXCIgKyByb3V0ZVRvICsgXCIvXCIgKyBwcm9qZWN0X2lkICsgXCIvYXBpL2dyb3VwLVwiICsgcmVzb3VyY2VOYW1lICsgXCI/Z3JvdXBpZD1cIiArIGdyb3VwX2lkLCBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICQuZWFjaChkYXRhLmltYWdlcywgZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICAgICAgICAgIHZhciBmaWxlID0geyBuYW1lOiB2YWx1ZS5maWxlbmFtZSwgc2l6ZTogdmFsdWUuc2l6ZSB9O1xyXG4gICAgICAgICAgbXlEcm9wem9uZS5lbWl0KFwiYWRkZWRmaWxlXCIsIGZpbGUpO1xyXG4gICAgICAgICAgLy8gbXlEcm9wem9uZS5jcmVhdGVUaHVtYm5haWxGcm9tVXJsKGZpbGUsIHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCArIFwiL3N0b3JhZ2UvcHJvamVjdHNfZ3JvdXBzX2ltYWdlcy9cIiArIGdyb3VwX2lkICsgXCIvXCIgKyB2YWx1ZS5uYW1lKTtcclxuICAgICAgICAgIG15RHJvcHpvbmUuZW1pdChcImNvbXBsZXRlXCIsIGZpbGUpO1xyXG4gICAgICAgICAgdmFyIGJ0bmRlbGV0ZSA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWR6LXJlbW92ZV1cIik7XHJcbiAgICAgICAgICBidG5kZWxldGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgJ2RlbGV0ZS1tZWRpYS1uYW1lLScgKyB2YWx1ZS5uYW1lKTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgaWYocmVzb3VyY2VOYW1lID09PSBcIlBvc3RlclwiKXtcclxuICAgICAgICAgICAgbXlEcm9wem9uZS5vcHRpb25zLm1heEZpbGVzID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIG15RHJvcHpvbmUub24oXCJtYXhmaWxlc2V4Y2VlZGVkXCIsIGZ1bmN0aW9uKGZpbGUpIHsgXHJcbiAgICAgICAgbXlEcm9wem9uZS5yZW1vdmVGaWxlKGZpbGUpO1xyXG4gICAgICAgIHdpbmRvdy5hbGVydCgnWW91IGNhbiBvbmx5IHVwbG9hZCAxIHBvc3RlciEnKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBteURyb3B6b25lLm9uKFwicmVtb3ZlZGZpbGVcIiwgZnVuY3Rpb24gKGZpbGUpIHtcclxuXHJcbiAgICAgICAgdmFyIGJ0bmRlbGV0ZSA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWR6LXJlbW92ZV1cIik7XHJcbiAgICAgICAgaWYgKGJ0bmRlbGV0ZS5oYXNBdHRyaWJ1dGUoXCJpZFwiKSkge1xyXG4gICAgICAgICAgdmFyIGZpbGVuYW1lID0gYnRuZGVsZXRlLmdldEF0dHJpYnV0ZShcImlkXCIpLnN1YnN0cigxOCk7XHJcblxyXG4gICAgICAgICAgaWYocmVzb3VyY2VOYW1lID09PSBcIlBvc3RlclwiKXtcclxuICAgICAgICAgICAgbXlEcm9wem9uZS5vcHRpb25zLm1heEZpbGVzID0gMTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICB1cmw6IHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCArIFwiL1wiICsgcm91dGVUbyArIFwiL1wiICsgcHJvamVjdF9pZCArIFwiL2ZpbmlzaC9kZWxldGVcIiArIHJlc291cmNlTmFtZSxcclxuICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICBkZWxheTogMjUwLFxyXG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICBkYXRhOiB7XHJcblxyXG4gICAgICAgICAgICBpZDogcHJvamVjdF9pZCxcclxuICAgICAgICAgICAgbmFtZTogZmlsZW5hbWUsXHJcbiAgICAgICAgICAgIGdyb3VwX2lkOiBncm91cF9pZFxyXG5cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KS5kb25lKGZ1bmN0aW9uIChtc2cpIHtcclxuXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZmlsZSwgc2VydmVyUmVzcG9uc2UpIHtcclxuICAgICAgdmFyIGJ0bmRlbGV0ZSA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWR6LXJlbW92ZV1cIik7XHJcbiAgICAgIGJ0bmRlbGV0ZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCAnZGVsZXRlLW1lZGlhLW5hbWUtJyArIHNlcnZlclJlc3BvbnNlLmdkcml2ZV9pZCArICcucG5nJyk7XHJcbiAgICAgIHdpbmRvdy5hbGVydCgnVXBsb2FkIHN1Y2Nlc3NmdWwnKTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuLypcclxuICBTZW5kaW5nIERFTEVURSByZXF1ZXN0IHdpdGhvdXQgYSBmb3JtXHJcbiAgRXhhbXBsZTpcclxuICA8YSBocmVmPVwicG9zdHMvMlwiIGRhdGEtbWV0aG9kPVwiZGVsZXRlXCIgZGF0YS10b2tlbj1cInt7Y3NyZl90b2tlbigpfX1cIj5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG5cclxuICB2YXIgbGFyYXZlbCA9IHtcclxuICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdGhpcy5tZXRob2RMaW5rcyA9ICQoJ2FbZGF0YS1tZXRob2RdJyk7XHJcbiAgICAgIHRoaXMudG9rZW4gPSAkKCdhW2RhdGEtdG9rZW5dJyk7XHJcbiAgICAgIHRoaXMucmVnaXN0ZXJFdmVudHMoKTtcclxuICAgIH0sXHJcblxyXG4gICAgcmVnaXN0ZXJFdmVudHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdGhpcy5tZXRob2RMaW5rcy5vbignY2xpY2snLCB0aGlzLmhhbmRsZU1ldGhvZCk7XHJcbiAgICB9LFxyXG5cclxuICAgIGhhbmRsZU1ldGhvZDogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgdmFyIGxpbmsgPSAkKHRoaXMpO1xyXG4gICAgICB2YXIgaHR0cE1ldGhvZCA9IGxpbmsuZGF0YSgnbWV0aG9kJykudG9VcHBlckNhc2UoKTtcclxuICAgICAgdmFyIGZvcm07XHJcblxyXG4gICAgICAvLyBJZiB0aGUgZGF0YS1tZXRob2QgYXR0cmlidXRlIGlzIG5vdCBQVVQgb3IgREVMRVRFLFxyXG4gICAgICAvLyB0aGVuIHdlIGRvbid0IGtub3cgd2hhdCB0byBkby4gSnVzdCBpZ25vcmUuXHJcbiAgICAgIGlmICgkLmluQXJyYXkoaHR0cE1ldGhvZCwgWydQVVQnLCAnREVMRVRFJ10pID09PSAtIDEpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIEFsbG93IHVzZXIgdG8gb3B0aW9uYWxseSBwcm92aWRlIGRhdGEtY29uZmlybT1cIkFyZSB5b3Ugc3VyZT9cIlxyXG4gICAgICBpZiAobGluay5kYXRhKCdjb25maXJtJykpIHtcclxuICAgICAgICBpZiAoIWxhcmF2ZWwudmVyaWZ5Q29uZmlybShsaW5rKSkge1xyXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgZm9ybSA9IGxhcmF2ZWwuY3JlYXRlRm9ybShsaW5rKTtcclxuICAgICAgZm9ybS5zdWJtaXQoKTtcclxuXHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0sXHJcblxyXG4gICAgdmVyaWZ5Q29uZmlybTogZnVuY3Rpb24gKGxpbmspIHtcclxuICAgICAgcmV0dXJuIGNvbmZpcm0obGluay5kYXRhKCdjb25maXJtJykpO1xyXG4gICAgfSxcclxuXHJcbiAgICBjcmVhdGVGb3JtOiBmdW5jdGlvbiAobGluaykge1xyXG4gICAgICB2YXIgZm9ybSA9XHJcbiAgICAgICAgJCgnPGZvcm0+Jywge1xyXG4gICAgICAgICAgJ21ldGhvZCc6ICdQT1NUJyxcclxuICAgICAgICAgICdhY3Rpb24nOiBsaW5rLmF0dHIoJ2hyZWYnKVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgdmFyIHRva2VuID1cclxuICAgICAgICAkKCc8aW5wdXQ+Jywge1xyXG4gICAgICAgICAgJ3R5cGUnOiAnaGlkZGVuJyxcclxuICAgICAgICAgICduYW1lJzogJ190b2tlbicsXHJcbiAgICAgICAgICAndmFsdWUnOiBsaW5rLmRhdGEoJ3Rva2VuJylcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgIHZhciBoaWRkZW5JbnB1dCA9XHJcbiAgICAgICAgJCgnPGlucHV0PicsIHtcclxuICAgICAgICAgICduYW1lJzogJ19tZXRob2QnLFxyXG4gICAgICAgICAgJ3R5cGUnOiAnaGlkZGVuJyxcclxuICAgICAgICAgICd2YWx1ZSc6IGxpbmsuZGF0YSgnbWV0aG9kJylcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBmb3JtLmFwcGVuZCh0b2tlbiwgaGlkZGVuSW5wdXQpXHJcbiAgICAgICAgLmFwcGVuZFRvKCdib2R5Jyk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgbGFyYXZlbC5pbml0aWFsaXplKCk7XHJcblxyXG59KSgpO1xyXG5cclxuXHJcblxyXG4vLyBTaG93IG9yIGhpZGUgYWRkaXRpb25hbCBxdWVzdGlvbiBpbnB1dCBmaWVsZFxyXG5jb25zdCBhZGRfcXVlc3Rpb25fZmllbGRfYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZF9xdWVzdGlvbl9maWVsZF9idXR0b24nKTtcclxuY29uc3QgcmVtb3ZlX3F1ZXN0aW9uX2ZpZWxkX2J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZW1vdmVfcXVlc3Rpb25fZmllbGRfYnV0dG9uJyk7XHJcbmNvbnN0IGV4dHJhX3EgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZXh0cmFfcScpO1xyXG5sZXQgcV9jb3VudGVyID0gLTE7IC8vIC0xID0+IG5vIGFkZGl0aW9uYWwgcXVlc3Rpb25zLCAwID0+IG9uZSBxdWVzdGlvbiwgMSA9PiB0d28gcXVlc3Rpb25zXHJcblxyXG5pZiAoZXh0cmFfcS5sZW5ndGggIT09IDApIHtcclxuICBpZiAoIWV4dHJhX3FbMF0uaGFzQXR0cmlidXRlKCdoaWRkZW4nKSkge1xyXG4gICAgcV9jb3VudGVyID0gMDtcclxuICB9XHJcbiAgaWYgKCFleHRyYV9xWzFdLmhhc0F0dHJpYnV0ZSgnaGlkZGVuJykpIHtcclxuICAgIHFfY291bnRlciA9IDE7XHJcbiAgfVxyXG5cclxuICBjb25zdCBoYW5kbGVfYWRkX2J1dHRvbl9jbGljayA9ICgpID0+IHtcclxuICAgIGlmIChxX2NvdW50ZXIgPCAxKSB7XHJcbiAgICAgIHFfY291bnRlcisrO1xyXG4gICAgfVxyXG4gICAgZXh0cmFfcVtxX2NvdW50ZXJdLmhpZGRlbiA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgaGFuZGxlX3JlbW92ZV9idXR0b25fY2xpY2sgPSAoKSA9PiB7XHJcbiAgICBpZiAocV9jb3VudGVyID4gLTEpIHtcclxuICAgICAgZXh0cmFfcVtxX2NvdW50ZXJdLmhpZGRlbiA9IHRydWU7XHJcbiAgICAgIC8vcmVtb3ZlIHVzZXIgaW5wdXRcclxuICAgICAgZXh0cmFfcVtxX2NvdW50ZXJdLmxhc3RFbGVtZW50Q2hpbGQuZmlyc3RFbGVtZW50Q2hpbGQudmFsdWUgPSAnJztcclxuICAgICAgcV9jb3VudGVyLS07XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFkZF9xdWVzdGlvbl9maWVsZF9idXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVfYWRkX2J1dHRvbl9jbGljayk7XHJcbiAgcmVtb3ZlX3F1ZXN0aW9uX2ZpZWxkX2J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZV9yZW1vdmVfYnV0dG9uX2NsaWNrKTtcclxufVxyXG5cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvYXBwLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);