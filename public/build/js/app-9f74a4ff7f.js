/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("jQuery(document).ready(function($) {\n\n\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n\n  // Date picker\n  $('#project_start').datetimepicker({\n    format: 'L'\n  });\n\n  $('#project_end').datetimepicker({\n    format: 'L'\n  });\n\n  $('#join_deadline').datetimepicker({\n    format: 'L'\n  });\n\n  $('.evaluation-dates').datetimepicker({\n    format: 'L'\n  });\n\n  $('#project_start').datetimepicker();\n  $('#project_end').datetimepicker({\n    useCurrent: false //Important! See issue #1075\n  });\n  $(\"#project_start\").on(\"dp.change\", function (e) {\n    $('#project_end').data(\"DateTimePicker\").minDate(e.date);\n  });\n  $(\"#project_end\").on(\"dp.change\", function (e) {\n    $('#project_start').data(\"DateTimePicker\").maxDate(e.date);\n  });\n\n\n\n  // Tags input\n  $('input #tags').on('change', function(event) {\n    var $element = $(event.target),\n      $container = $element.closest('.example');\n\n    var val = $element.val();\n    if (val === null)\n      val = \"null\";\n    $('code', $('pre.val', $container)).html( ($.isArray(val) ? JSON.stringify(val) : \"\\\"\" + val.replace('\"', '\\\\\"') + \"\\\"\") );\n    $('code', $('pre.items', $container)).html(JSON.stringify($element.tagsinput('items')));\n  }).trigger('change');\n\n\n  // Sweet alert\n  $(\"button#delete\").on(\"click\", function(e){\n\n    swal({\n        title: window.Laravel.are_you_sure_notification,\n        text: window.Laravel.cannot_restore_notification,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#DD6B55\",\n        confirmButtonText: window.Laravel.yes_delete,\n        cancelButtonText: window.Laravel.no,\n        closeOnConfirm: false\n      },\n      function(){\n        $(e.target).prev('.delete-project').submit();\n\n      });\n\n  });\n\n\n  $(\"button#delete-user-button\").on(\"click\", function(e){\n\n    swal({\n        title: window.Laravel.are_you_sure_notification,\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#DD6B55\",\n        confirmButtonText: window.Laravel.yes_delete,\n        cancelButtonText: window.Laravel.no,\n        closeOnConfirm: false\n      },\n      function(){\n        $(e.target).prev('.delete-user').submit();\n\n      });\n\n  });\n\n\n  $(\"a#groups-finish-button\").on(\"click\", function(e){\n    if(!$(\"a#groups-finish-button\").hasClass('not-empty')){\n      e.preventDefault();\n\n      swal({\n        title: window.Laravel.finish_project_notification,\n        type: \"info\",\n        confirmButtonText: window.Laravel.yes,\n        closeOnConfirm: false\n      });\n    }\n  });\n\n  $(\"button#join-project-button\").on(\"click\", function(e){\n\n    var user_tlu_student_id = null\n    if (window.Laravel.user.tlu_student_id) {\n        user_tlu_student_id = JSON.parse(window.Laravel.user.tlu_student_id)[0][0].split(\"@\")[0];\n    }\n    $.ajax({\n        url: window.Laravel.base_path+\"/oisJoinConfirmation?oppijaId=\"+user_tlu_student_id+\"&ainekood=YID6001.YM\",\n    }).done(function (response) {\n        var textToDisplay = \"No TLU student id present.\";\n        var showConfirm = false;\n        if (window.Laravel.user.tlu_student_id != null) {\n            var data = JSON.parse(response);\n            var repeat = \" \";\n            if (data.deklaratsioon.onKorduv == true) {\n                repeat = \" not \";\n            }\n            var attendace = \"You would\"+repeat+\"be attending the course for the first time\\n\";\n            var price = \"Price of declaration: \"+data.deklaratsioon.hind+\"\\n\";\n            var info = \"Info: \"+data.deklaratsioon.teade;\n            textToDisplay = attendace+price+info;\n            if (data.deklaratsioon.saab == true) {\n                showConfirm = true;\n            }\n        }\n        swal({\n            title: window.Laravel.are_you_sure_notification,\n            text: textToDisplay,\n            type: \"info\",\n            showCancelButton: true,\n            showConfirmButton: showConfirm,\n            confirmButtonColor: \"#DD6B55\",\n            confirmButtonText: window.Laravel.yes,\n            cancelButtonText: \"Cancel\",\n            closeOnConfirm: false\n        },\n        function(){\n            $(e.target).prev('#join-project').submit();\n        });\n    });\n    /*\n    fetch(window.Laravel.base_path+\"/oisJoinConfirmation?oppijaId=\"+\"91980\"+\"&ainekood=YID6001.YM\")\n    .then(function (declaration) {\n        console.log(declaration);\n        swal({\n            title: window.Laravel.are_you_sure_notification,\n            text: declaration.response,\n            type: \"info\",\n            showCancelButton: true,\n            confirmButtonColor: \"#DD6B55\",\n            confirmButtonText: window.Laravel.yes,\n            cancelButtonText: window.Laravel.no,\n            closeOnConfirm: false\n        },\n        function(){\n            $(e.target).prev('#join-project').submit();\n        })\n    });\n    */\n    \n\n  });\n\n  // Select2\n  $(\".js-example-basic-multiple\").select2();\n\n\n\n  // Select2 Ajax - attaching users to project team manually\n  $(\".js-users-data-ajax\").select2({\n    placeholder: window.Laravel.name_or_email_placeholder,\n    language: { inputTooShort: function () { return window.Laravel.three_or_more_char; } },\n    allowClear: true,\n    ajax: {\n      url: window.Laravel.search_user_api_url,\n      dataType: 'json',\n      delay: 250,\n      method: 'POST',\n      data: function (params) {\n        return {\n          q: params.term, // search term\n          project_id: $('.js-users-data-ajax').attr(\"project-id\"),\n          page: params.page\n        };\n      },\n      processResults: function (data) {\n        return {\n          results: $.map(data, function (item) {\n            return {\n              text: (item.full_name ? item.full_name : item.name) + ' ('+(item.contact_email? item.contact_email : item.email)+')',\n              id: item.id\n            }\n          })\n        };\n      },\n      cache: false\n    },\n    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n    minimumInputLength: 3\n  });\n\n  //Smooth scroll for front page\n  $('body.frontpage a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n    if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n      if (target.length) {\n        $('html, body').animate({\n          scrollTop: target.offset().top\n        }, 1000);\n        return false;\n      }\n    }\n  });\n\n\n\n  //Go from front page to certain tab in FAQ page\n  var hash = window.location.hash;\n  if(hash.startsWith('#item')){\n    hash && $('ul.nav a[href=\"' + hash + '\"]').tab('show');\n  }\n\n  //Search form\n  $('.search-panel .navbar-nav').find('a').click(function(e) {\n    e.preventDefault();\n    var param = $(this).attr(\"href\").replace(\"#\",\"\");\n    var concept = $(this).text();\n    $('.search-panel span#search_concept').text(concept);\n    $('.form-group #search_param').val(param);\n  });\n\n  var selector = '.search-panel .navbar-nav li';\n\n  $(selector).on('click', function(){\n    $(selector).removeClass('active');\n    $(this).addClass('active');\n  });\n\n\n\n  //Panel used in search view to show a list of member emails\n  $('.panel-heading span.clickable').parents('.panel').find('.panel-body').slideUp();\n\n  $('.panel-heading span.clickable').on(\"click\", function(e){\n    var $this = $(this);\n    if(!$this.hasClass('panel-collapsed')) {\n      $this.parents('.panel').find('.panel-body').slideUp();\n      $this.addClass('panel-collapsed');\n      $this.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');\n    } else {\n      $this.parents('.panel').find('.panel-body').slideDown();\n      $this.removeClass('panel-collapsed');\n      $this.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');\n    }\n  });\n\n\n  //Facebook sharing button handler, Facebook SDK for JavaScript\n  function postToFeed(url){\n    var obj = {method: 'feed',link: url};\n    function callback(response){}\n    FB.ui(obj, callback);\n  }\n\n  $('.btnShare').click(function(){\n    elem = $(this);\n    postToFeed(elem.prop('href'));\n\n    return false;\n  });\n\n\n  //TinyMC\n  tinyMCE.baseURL = window.Laravel.base_path+\"/js/tinymce\";\n\n  tinymce.init({\n    mode : \"textareas\",\n    theme : \"modern\",\n    language: window.Laravel.language,\n    plugins: [\"link\", \"paste\"],\n    menubar: false,\n    toolbar: \"link\",\n    removeformat: [\n      {selector: 'b,strong,em,i,font,u,strike', remove : 'all', split : true, expand : false, block_expand: true, deep : true},\n      {selector: 'span', attributes : ['style', 'class'], remove : 'empty', split : true, expand : false, deep : true},\n      {selector: '*', attributes : ['style', 'class'], split : false, expand : false, deep : true,}\n    ],\n    selection_toolbar: 'bold italic | quicklink h2 h3 blockquote',\n    editor_selector : \"mceSimpleLink\",\n    paste_as_text: true\n  });\n\n  tinyMCE.init({\n    mode : \"textareas\",\n    language: window.Laravel.language,\n    plugins: [\"link\", \"lists\", \"paste\", \"noneditable\", \"preventdelete\"],\n    height : \"350\",\n    removeformat: [\n      {selector: 'b,strong,em,i,font,u,strike', remove : 'all', split : true, expand : false, block_expand: true, deep : true},\n      {selector: 'span', attributes : ['style', 'class'], remove : 'empty', split : true, expand : false, deep : true},\n      {selector: '*', attributes : ['style', 'class'], split : false, expand : false, deep : true}\n    ],\n    toolbar: \"redo undo bold italic numlist bullist link\",\n    menubar: false,\n    editor_selector : \"mceSimple\",\n    paste_as_text: true\n  });\n\n  $('#submit-project-button').on('click', function (e) {\n    e.preventDefault();\n    tinyMCE.triggerSave();\n    if (tinyMCE.get('project_outcomes').getContent() != '') {\n      tinyMCE.get('project_outcomes').setContent(removeExcessWhitespaceFromString(tinyMCE.get('project_outcomes').getContent().split('&nbsp;').join(' ')));\n    }\n    if (tinyMCE.get('novelty_desc').getContent() != '') {\n      tinyMCE.get('novelty_desc').setContent(removeExcessWhitespaceFromString(tinyMCE.get('novelty_desc').getContent().split('&nbsp;').join(' ')));\n    }\n    if (tinyMCE.get('aim').getContent() != '') {\n      tinyMCE.get('aim').setContent(removeExcessWhitespaceFromString(tinyMCE.get('aim').getContent().split('&nbsp;').join(' ')));\n    }\n    if (tinyMCE.get('description').getContent() != '') {\n      tinyMCE.get('description').setContent(removeExcessWhitespaceFromString(tinyMCE.get('description').getContent().split('&nbsp;').join(' ')));\n    }\n    tinyMCE.triggerSave();\n    $('#project-form').submit();\n  });\n\n\n  function removeExcessWhitespaceFromString (string) {\n    var stringLength = string.length;\n    var outputString = \"\";\n    for (var i=0;i<stringLength-1;i++) {\n      if (!(string[i] === \" \" && string[i+1] === \" \" || string[i] === \" \" && string[i+1] === \"<\" || string[i-1] === \">\" && string[i] === \" \")) {\n        outputString += string[i];\n      }\n    }\n    if (string[stringLength] !== \" \") {\n      outputString += string[stringLength-1]\n    }\n    // Removing empty tags\n    var helper = $('<div>').append(outputString);\n    removeEmptyIfNoChildren(helper);\n    outputString = helper.prop('innerHTML');\n    return outputString;\n  }\n\n  function removeEmptyIfNoChildren (element) {\n    if (element.children().length > 0) {\n      element.children().each(function () {\n        removeEmptyIfNoChildren($(this));\n      });\n    }\n    if (element.html() === \"\") {\n      element.remove();\n    }\n  }\n\n  //Front page logo translation\n  if(window.Laravel.language == 'en'){\n    $('.block01.block01b > .pad').css(\"background\", 'url(css/bg05_en.png) no-repeat 50% 50%');\n  }else{\n    $('.block01.block01b > .pad').css(\"background\", 'url(css/bg05.png) no-repeat 50% 50%');\n  }\n\n\n  //Select project share url on click on input\n  $(\"input[name='share_url']\").on(\"click\", function () {\n    $(this).select();\n  });\n\n\n  if($(\"#project_all_members\").length) {\n\n    //Project id used by ProjectModerator middleware\n    var url = window.location.pathname;\n    var segments = url.split( '/' );\n    var project_id =  segments[segments.length-2];\n\n\n    //Drag and drop project group members functionality\n    Sortable.create(project_all_members, {\n      group: { name: \"project-all-members\", pull: true, put:true },\n      animation: 150,\n      handle: '.drag-handle'\n    });\n\n    var el = $('.project-group');\n    $(el).each(function (i,e) {\n      var sortable = Sortable.create(e, {\n        group: {\n          name: el.attr('group-id'),\n          pull: true,\n          put: function () {\n            return true;\n          }\n        },\n        animation: 150,\n        handle: '.drag-handle',\n        onAdd: function (evt) {\n\n          var itemEl = evt.item;  // dragged HTMLElement\n          var from = evt.from;\n\n\n          $.ajax({\n            url: window.Laravel.add_user_to_group_api_url,\n            dataType: 'json',\n            delay: 250,\n            method: 'POST',\n            cache: false,\n            data: {\n\n              id: project_id,\n              to: $(itemEl).parent().attr('group-id'),\n              from: $(from).attr('group-id'),\n              user: $(itemEl).attr('user-id')\n\n            }\n          }).done(function( msg ) {\n            console.log(msg);\n            if($('a#groups-finish-button').length){\n              $('a#groups-finish-button').addClass('not-empty');\n            }\n\n\n          });\n\n        }\n\n      });\n    })\n  }\n\n\n  //Copy user main TLU email into contact email fields, used on profile page\n  $(\"#filler\").click(fillValues);\n\n\n  function fillValues() {\n    var value = $(\"#tlu_email\").val();\n    var fields= $(\".contact-email\");\n    fields.each(function (i) {\n      $(this).val(value);\n    });\n  }\n\n\n\n  //Add custom institution field in user registration form\n  $('#institution').on('change',function(){\n    if( $(this).val() === window.Laravel.other_institution){\n      $(\"#other-institution\").show()\n    }\n    else{\n      $(\"#other-institution\").hide()\n    }\n  });\n\n\n\n\n  // Add new group links input field\n  var add_links_field_buttons = $(\".add_links_field_button\");\n\n  add_links_field_buttons.each(function (i, obj) {\n    var group_id = $(obj).attr(\"group-id\");\n    $(obj).click(function(e){\n      e.preventDefault();\n      var $div = $(this).next( \".group-materials\").children().last();\n\n      var num = $div.prop(\"id\");\n\n      num = parseInt(num.split(\"_\").pop());\n\n\n      var clone = $($div).clone();\n      clone.prop('id', 'group_materials_'+group_id+'_'+(num+1));\n      clone.find(\"input\").val(\"\");\n      clone.insertAfter($div);\n\n      var tagsinput = clone.find('.tags');\n      clone.find('.bootstrap-tagsinput').remove();\n\n      $(tagsinput).attr('name', 'group_material_tags['+group_id+'][]');\n      $(tagsinput).addClass('form-control tags');\n      tagsinput.tagsinput();\n      tagsinput.tagsinput('removeAll');\n\n\n\n\n\n    });\n\n  });\n\n\n\n\n  // Remove group links input field\n  var remove_links_field_button = $(\".remove_links_field_button\");\n\n  remove_links_field_button.each(function (i, obj) {\n    var group_id = $(obj).attr(\"group-id\");\n    $(obj).click(function(e){\n\n      e.preventDefault();\n      var $div = $(this).parent().children(\":last-child\");\n\n      var num = $div.prop(\"id\");\n\n      num = parseInt(num.split(\"_\").pop());\n\n      if(num>0){\n        $div.remove();\n      }\n\n\n\n\n\n\n    });\n  });\n\n\n\n  $('[data-toggle=\"popover\"]').popover();\n\n\n  $('#clear-embedded').click(function(){\n    $('#embedded')\n      .val('')\n  });\n\n\n  $('#clear-group-embedded').click(function(){\n    $(this).prev('input').val('');\n  });\n\n\n  $('body').tooltip({\n    selector: '[rel=\"tooltip\"]'\n  });\n\n\n  //Group title renaming;\n  $('.group-name').editable({\n    send:'always',\n    ajaxOptions: {\n      dataType: 'json',\n      type: 'post',\n\n    },\n    params: function(params) {\n      //originally params contain pk, name and value\n      params.id = $(this).closest(\"div\").attr(\"project-id\");\n      return params;\n    }\n\n  });\n\n\n\n\n\n});\n\nDropzone.autoDiscover = false;\nDropzone.prototype.defaultOptions.dictRemoveFile = window.Laravel.remove_file_button;\n\nvar dropzones = $(\".dropzone\");\ndropzones.each(function (i) {\n  if (this.id.indexOf(\"presentationUpload\") !== -1) {\n    var resourceName = \"Poster\";\n    var accepted = \"application/pdf\";\n    var maxNumberOfFiles = 1;\n    var group_id = parseInt( $(this).prop(\"id\").match(/\\d+/g), 10 );\n\n    var project_id = $(\"#presentationUpload\"+group_id).attr(\"project-id\");\n    var dropzone_name = \"#presentationUpload\"+group_id;\n  } else {\n    var resourceName = \"Materials\";\n    var accepted = \"\";\n    var maxNumberOfFiles = 100;\n    var group_id = parseInt( $(this).prop(\"id\").match(/\\d+/g), 10 );\n\n    var project_id = $(\"#materialsUpload\"+group_id).attr(\"project-id\");\n    var dropzone_name = \"#materialsUpload\"+group_id;\n  }\n  if (this.getAttribute('auth') == 'student') {\n    var routeTo = 'finish';\n  } else {\n    var routeTo = 'project';\n  }\n\n    var myDropzone = new Dropzone(dropzone_name, {\n    url: window.Laravel.base_path+\"/\"+routeTo+\"/\"+project_id+\"/finish/upload\"+resourceName,\n    params: {\n      id: project_id,\n      _token: window.Laravel.csfr_token,\n      group_id: group_id\n    },\n    timeout: 0,\n    parallelUploads: 1,\n    paramName: \"file\",\n    acceptedFiles: accepted,\n    maxFiles: maxNumberOfFiles,\n    maxFilesize: 30, // MB\n\n    addRemoveLinks: true,\n\n    init:function() {\n\n\n      // Add server images\n      var myDropzone = this;\n\n      $.get(window.Laravel.base_path+\"/\"+routeTo+\"/\"+project_id+\"/api/group-\"+resourceName+\"?groupid=\"+group_id, function(data) {\n\n\n        $.each(data.images, function (key, value) {\n          var file = {name: value.filename, size: value.size};\n          myDropzone.options.addedfile.call(myDropzone, file);\n          myDropzone.createThumbnailFromUrl(file, window.Laravel.base_path+\"/storage/projects_groups_images/\"+group_id+\"/\"+value.name);\n          myDropzone.emit(\"complete\", file);\n          var btndelete = file.previewElement.querySelector(\"[data-dz-remove]\");\n          btndelete.setAttribute(\"id\", 'delete-media-name-'+value.name);\n\n        });\n      });\n\n      this.on(\"removedfile\", function(file) {\n\n        var btndelete = file.previewElement.querySelector(\"[data-dz-remove]\");\n        if(btndelete.hasAttribute(\"id\")) {\n          var filename = btndelete.getAttribute(\"id\").substr(18);\n        }\n\n        $.ajax({\n          url: window.Laravel.base_path+\"/\"+routeTo+\"/\"+project_id+\"/finish/delete\"+resourceName,\n          dataType: 'json',\n          delay: 250,\n          method: 'POST',\n          cache: false,\n          data: {\n\n            id: project_id,\n            name: filename,\n            group_id: group_id\n\n          }\n        }).done(function( msg ) {\n          console.log(msg);\n\n        });\n\n      } );\n    },\n    success: function(file, serverResponse) {\n      var fileuploded = file.previewElement.querySelector(\"[data-dz-name]\");\n      fileuploded.innerHTML = serverResponse.newfilename;\n      var btndelete = file.previewElement.querySelector(\"[data-dz-remove]\");\n      btndelete.setAttribute(\"id\", 'delete-media-name-'+serverResponse.newfilename);\n      window.alert('Upload successful');\n    }\n  });\n});\n\n\n\n\n\n\n\n\n/*\n  Sending DELETE request without a form\n  Example:\n  <a href=\"posts/2\" data-method=\"delete\" data-token=\"{{csrf_token()}}\">\n */\n\n(function() {\n\n  var laravel = {\n    initialize: function() {\n      this.methodLinks = $('a[data-method]');\n      this.token = $('a[data-token]');\n      this.registerEvents();\n    },\n\n    registerEvents: function() {\n      this.methodLinks.on('click', this.handleMethod);\n    },\n\n    handleMethod: function(e) {\n      var link = $(this);\n      var httpMethod = link.data('method').toUpperCase();\n      var form;\n\n      // If the data-method attribute is not PUT or DELETE,\n      // then we don't know what to do. Just ignore.\n      if ( $.inArray(httpMethod, ['PUT', 'DELETE']) === - 1 ) {\n        return;\n      }\n\n      // Allow user to optionally provide data-confirm=\"Are you sure?\"\n      if ( link.data('confirm') ) {\n        if ( ! laravel.verifyConfirm(link) ) {\n          return false;\n        }\n      }\n\n      form = laravel.createForm(link);\n      form.submit();\n\n      e.preventDefault();\n    },\n\n    verifyConfirm: function(link) {\n      return confirm(link.data('confirm'));\n    },\n\n    createForm: function(link) {\n      var form =\n        $('<form>', {\n          'method': 'POST',\n          'action': link.attr('href')\n        });\n\n      var token =\n        $('<input>', {\n          'type': 'hidden',\n          'name': '_token',\n          'value': link.data('token')\n        });\n\n      var hiddenInput =\n        $('<input>', {\n          'name': '_method',\n          'type': 'hidden',\n          'value': link.data('method')\n        });\n\n      return form.append(token, hiddenInput)\n        .appendTo('body');\n    }\n  };\n\n  laravel.initialize();\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz84YjY3Il0sInNvdXJjZXNDb250ZW50IjpbImpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkge1xuXG5cbiAgJC5hamF4U2V0dXAoe1xuICAgIGhlYWRlcnM6IHtcbiAgICAgICdYLUNTUkYtVE9LRU4nOiAkKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCJdJykuYXR0cignY29udGVudCcpXG4gICAgfVxuICB9KTtcblxuICAvLyBEYXRlIHBpY2tlclxuICAkKCcjcHJvamVjdF9zdGFydCcpLmRhdGV0aW1lcGlja2VyKHtcbiAgICBmb3JtYXQ6ICdMJ1xuICB9KTtcblxuICAkKCcjcHJvamVjdF9lbmQnKS5kYXRldGltZXBpY2tlcih7XG4gICAgZm9ybWF0OiAnTCdcbiAgfSk7XG5cbiAgJCgnI2pvaW5fZGVhZGxpbmUnKS5kYXRldGltZXBpY2tlcih7XG4gICAgZm9ybWF0OiAnTCdcbiAgfSk7XG5cbiAgJCgnLmV2YWx1YXRpb24tZGF0ZXMnKS5kYXRldGltZXBpY2tlcih7XG4gICAgZm9ybWF0OiAnTCdcbiAgfSk7XG5cbiAgJCgnI3Byb2plY3Rfc3RhcnQnKS5kYXRldGltZXBpY2tlcigpO1xuICAkKCcjcHJvamVjdF9lbmQnKS5kYXRldGltZXBpY2tlcih7XG4gICAgdXNlQ3VycmVudDogZmFsc2UgLy9JbXBvcnRhbnQhIFNlZSBpc3N1ZSAjMTA3NVxuICB9KTtcbiAgJChcIiNwcm9qZWN0X3N0YXJ0XCIpLm9uKFwiZHAuY2hhbmdlXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgJCgnI3Byb2plY3RfZW5kJykuZGF0YShcIkRhdGVUaW1lUGlja2VyXCIpLm1pbkRhdGUoZS5kYXRlKTtcbiAgfSk7XG4gICQoXCIjcHJvamVjdF9lbmRcIikub24oXCJkcC5jaGFuZ2VcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAkKCcjcHJvamVjdF9zdGFydCcpLmRhdGEoXCJEYXRlVGltZVBpY2tlclwiKS5tYXhEYXRlKGUuZGF0ZSk7XG4gIH0pO1xuXG5cblxuICAvLyBUYWdzIGlucHV0XG4gICQoJ2lucHV0ICN0YWdzJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgdmFyICRlbGVtZW50ID0gJChldmVudC50YXJnZXQpLFxuICAgICAgJGNvbnRhaW5lciA9ICRlbGVtZW50LmNsb3Nlc3QoJy5leGFtcGxlJyk7XG5cbiAgICB2YXIgdmFsID0gJGVsZW1lbnQudmFsKCk7XG4gICAgaWYgKHZhbCA9PT0gbnVsbClcbiAgICAgIHZhbCA9IFwibnVsbFwiO1xuICAgICQoJ2NvZGUnLCAkKCdwcmUudmFsJywgJGNvbnRhaW5lcikpLmh0bWwoICgkLmlzQXJyYXkodmFsKSA/IEpTT04uc3RyaW5naWZ5KHZhbCkgOiBcIlxcXCJcIiArIHZhbC5yZXBsYWNlKCdcIicsICdcXFxcXCInKSArIFwiXFxcIlwiKSApO1xuICAgICQoJ2NvZGUnLCAkKCdwcmUuaXRlbXMnLCAkY29udGFpbmVyKSkuaHRtbChKU09OLnN0cmluZ2lmeSgkZWxlbWVudC50YWdzaW5wdXQoJ2l0ZW1zJykpKTtcbiAgfSkudHJpZ2dlcignY2hhbmdlJyk7XG5cblxuICAvLyBTd2VldCBhbGVydFxuICAkKFwiYnV0dG9uI2RlbGV0ZVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpe1xuXG4gICAgc3dhbCh7XG4gICAgICAgIHRpdGxlOiB3aW5kb3cuTGFyYXZlbC5hcmVfeW91X3N1cmVfbm90aWZpY2F0aW9uLFxuICAgICAgICB0ZXh0OiB3aW5kb3cuTGFyYXZlbC5jYW5ub3RfcmVzdG9yZV9ub3RpZmljYXRpb24sXG4gICAgICAgIHR5cGU6IFwid2FybmluZ1wiLFxuICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxuICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6IFwiI0RENkI1NVwiLFxuICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwueWVzX2RlbGV0ZSxcbiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwubm8sXG4gICAgICAgIGNsb3NlT25Db25maXJtOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uKCl7XG4gICAgICAgICQoZS50YXJnZXQpLnByZXYoJy5kZWxldGUtcHJvamVjdCcpLnN1Ym1pdCgpO1xuXG4gICAgICB9KTtcblxuICB9KTtcblxuXG4gICQoXCJidXR0b24jZGVsZXRlLXVzZXItYnV0dG9uXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSl7XG5cbiAgICBzd2FsKHtcbiAgICAgICAgdGl0bGU6IHdpbmRvdy5MYXJhdmVsLmFyZV95b3Vfc3VyZV9ub3RpZmljYXRpb24sXG4gICAgICAgIHR5cGU6IFwid2FybmluZ1wiLFxuICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxuICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6IFwiI0RENkI1NVwiLFxuICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwueWVzX2RlbGV0ZSxcbiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwubm8sXG4gICAgICAgIGNsb3NlT25Db25maXJtOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uKCl7XG4gICAgICAgICQoZS50YXJnZXQpLnByZXYoJy5kZWxldGUtdXNlcicpLnN1Ym1pdCgpO1xuXG4gICAgICB9KTtcblxuICB9KTtcblxuXG4gICQoXCJhI2dyb3Vwcy1maW5pc2gtYnV0dG9uXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSl7XG4gICAgaWYoISQoXCJhI2dyb3Vwcy1maW5pc2gtYnV0dG9uXCIpLmhhc0NsYXNzKCdub3QtZW1wdHknKSl7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIHN3YWwoe1xuICAgICAgICB0aXRsZTogd2luZG93LkxhcmF2ZWwuZmluaXNoX3Byb2plY3Rfbm90aWZpY2F0aW9uLFxuICAgICAgICB0eXBlOiBcImluZm9cIixcbiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHdpbmRvdy5MYXJhdmVsLnllcyxcbiAgICAgICAgY2xvc2VPbkNvbmZpcm06IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuXG4gICQoXCJidXR0b24jam9pbi1wcm9qZWN0LWJ1dHRvblwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpe1xuXG4gICAgbGV0IHVzZXJfdGx1X3N0dWRlbnRfaWQgPSBudWxsXG4gICAgaWYgKHdpbmRvdy5MYXJhdmVsLnVzZXIudGx1X3N0dWRlbnRfaWQpIHtcbiAgICAgICAgdXNlcl90bHVfc3R1ZGVudF9pZCA9IEpTT04ucGFyc2Uod2luZG93LkxhcmF2ZWwudXNlci50bHVfc3R1ZGVudF9pZClbMF1bMF0uc3BsaXQoXCJAXCIpWzBdO1xuICAgIH1cbiAgICAkLmFqYXgoe1xuICAgICAgICB1cmw6IHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCtcIi9vaXNKb2luQ29uZmlybWF0aW9uP29wcGlqYUlkPVwiK3VzZXJfdGx1X3N0dWRlbnRfaWQrXCImYWluZWtvb2Q9WUlENjAwMS5ZTVwiLFxuICAgIH0pLmRvbmUoZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIGxldCB0ZXh0VG9EaXNwbGF5ID0gXCJObyBUTFUgc3R1ZGVudCBpZCBwcmVzZW50LlwiO1xuICAgICAgICBsZXQgc2hvd0NvbmZpcm0gPSBmYWxzZTtcbiAgICAgICAgaWYgKHdpbmRvdy5MYXJhdmVsLnVzZXIudGx1X3N0dWRlbnRfaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIGxldCByZXBlYXQgPSBcIiBcIjtcbiAgICAgICAgICAgIGlmIChkYXRhLmRla2xhcmF0c2lvb24ub25Lb3JkdXYgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHJlcGVhdCA9IFwiIG5vdCBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBhdHRlbmRhY2UgPSBcIllvdSB3b3VsZFwiK3JlcGVhdCtcImJlIGF0dGVuZGluZyB0aGUgY291cnNlIGZvciB0aGUgZmlyc3QgdGltZVxcblwiO1xuICAgICAgICAgICAgbGV0IHByaWNlID0gXCJQcmljZSBvZiBkZWNsYXJhdGlvbjogXCIrZGF0YS5kZWtsYXJhdHNpb29uLmhpbmQrXCJcXG5cIjtcbiAgICAgICAgICAgIGxldCBpbmZvID0gXCJJbmZvOiBcIitkYXRhLmRla2xhcmF0c2lvb24udGVhZGU7XG4gICAgICAgICAgICB0ZXh0VG9EaXNwbGF5ID0gYXR0ZW5kYWNlK3ByaWNlK2luZm87XG4gICAgICAgICAgICBpZiAoZGF0YS5kZWtsYXJhdHNpb29uLnNhYWIgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHNob3dDb25maXJtID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzd2FsKHtcbiAgICAgICAgICAgIHRpdGxlOiB3aW5kb3cuTGFyYXZlbC5hcmVfeW91X3N1cmVfbm90aWZpY2F0aW9uLFxuICAgICAgICAgICAgdGV4dDogdGV4dFRvRGlzcGxheSxcbiAgICAgICAgICAgIHR5cGU6IFwiaW5mb1wiLFxuICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcbiAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBzaG93Q29uZmlybSxcbiAgICAgICAgICAgIGNvbmZpcm1CdXR0b25Db2xvcjogXCIjREQ2QjU1XCIsXG4gICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogd2luZG93LkxhcmF2ZWwueWVzLFxuICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogXCJDYW5jZWxcIixcbiAgICAgICAgICAgIGNsb3NlT25Db25maXJtOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBmdW5jdGlvbigpe1xuICAgICAgICAgICAgJChlLnRhcmdldCkucHJldignI2pvaW4tcHJvamVjdCcpLnN1Ym1pdCgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICAvKlxuICAgIGZldGNoKHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCtcIi9vaXNKb2luQ29uZmlybWF0aW9uP29wcGlqYUlkPVwiK1wiOTE5ODBcIitcIiZhaW5la29vZD1ZSUQ2MDAxLllNXCIpXG4gICAgLnRoZW4oZnVuY3Rpb24gKGRlY2xhcmF0aW9uKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGRlY2xhcmF0aW9uKTtcbiAgICAgICAgc3dhbCh7XG4gICAgICAgICAgICB0aXRsZTogd2luZG93LkxhcmF2ZWwuYXJlX3lvdV9zdXJlX25vdGlmaWNhdGlvbixcbiAgICAgICAgICAgIHRleHQ6IGRlY2xhcmF0aW9uLnJlc3BvbnNlLFxuICAgICAgICAgICAgdHlwZTogXCJpbmZvXCIsXG4gICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiBcIiNERDZCNTVcIixcbiAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB3aW5kb3cuTGFyYXZlbC55ZXMsXG4gICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiB3aW5kb3cuTGFyYXZlbC5ubyxcbiAgICAgICAgICAgIGNsb3NlT25Db25maXJtOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBmdW5jdGlvbigpe1xuICAgICAgICAgICAgJChlLnRhcmdldCkucHJldignI2pvaW4tcHJvamVjdCcpLnN1Ym1pdCgpO1xuICAgICAgICB9KVxuICAgIH0pO1xuICAgICovXG4gICAgXG5cbiAgfSk7XG5cbiAgLy8gU2VsZWN0MlxuICAkKFwiLmpzLWV4YW1wbGUtYmFzaWMtbXVsdGlwbGVcIikuc2VsZWN0MigpO1xuXG5cblxuICAvLyBTZWxlY3QyIEFqYXggLSBhdHRhY2hpbmcgdXNlcnMgdG8gcHJvamVjdCB0ZWFtIG1hbnVhbGx5XG4gICQoXCIuanMtdXNlcnMtZGF0YS1hamF4XCIpLnNlbGVjdDIoe1xuICAgIHBsYWNlaG9sZGVyOiB3aW5kb3cuTGFyYXZlbC5uYW1lX29yX2VtYWlsX3BsYWNlaG9sZGVyLFxuICAgIGxhbmd1YWdlOiB7IGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdpbmRvdy5MYXJhdmVsLnRocmVlX29yX21vcmVfY2hhcjsgfSB9LFxuICAgIGFsbG93Q2xlYXI6IHRydWUsXG4gICAgYWpheDoge1xuICAgICAgdXJsOiB3aW5kb3cuTGFyYXZlbC5zZWFyY2hfdXNlcl9hcGlfdXJsLFxuICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgIGRlbGF5OiAyNTAsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGE6IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBxOiBwYXJhbXMudGVybSwgLy8gc2VhcmNoIHRlcm1cbiAgICAgICAgICBwcm9qZWN0X2lkOiAkKCcuanMtdXNlcnMtZGF0YS1hamF4JykuYXR0cihcInByb2plY3QtaWRcIiksXG4gICAgICAgICAgcGFnZTogcGFyYW1zLnBhZ2VcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBwcm9jZXNzUmVzdWx0czogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICByZXN1bHRzOiAkLm1hcChkYXRhLCBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgdGV4dDogKGl0ZW0uZnVsbF9uYW1lID8gaXRlbS5mdWxsX25hbWUgOiBpdGVtLm5hbWUpICsgJyAoJysoaXRlbS5jb250YWN0X2VtYWlsPyBpdGVtLmNvbnRhY3RfZW1haWwgOiBpdGVtLmVtYWlsKSsnKScsXG4gICAgICAgICAgICAgIGlkOiBpdGVtLmlkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBjYWNoZTogZmFsc2VcbiAgICB9LFxuICAgIGVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCkgeyByZXR1cm4gbWFya3VwOyB9LCAvLyBsZXQgb3VyIGN1c3RvbSBmb3JtYXR0ZXIgd29ya1xuICAgIG1pbmltdW1JbnB1dExlbmd0aDogM1xuICB9KTtcblxuICAvL1Ntb290aCBzY3JvbGwgZm9yIGZyb250IHBhZ2VcbiAgJCgnYm9keS5mcm9udHBhZ2UgYVtocmVmKj1cIiNcIl06bm90KFtocmVmPVwiI1wiXSknKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXlxcLy8sJycpID09IHRoaXMucGF0aG5hbWUucmVwbGFjZSgvXlxcLy8sJycpICYmIGxvY2F0aW9uLmhvc3RuYW1lID09IHRoaXMuaG9zdG5hbWUpIHtcbiAgICAgIHZhciB0YXJnZXQgPSAkKHRoaXMuaGFzaCk7XG4gICAgICB0YXJnZXQgPSB0YXJnZXQubGVuZ3RoID8gdGFyZ2V0IDogJCgnW25hbWU9JyArIHRoaXMuaGFzaC5zbGljZSgxKSArJ10nKTtcbiAgICAgIGlmICh0YXJnZXQubGVuZ3RoKSB7XG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICBzY3JvbGxUb3A6IHRhcmdldC5vZmZzZXQoKS50b3BcbiAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG5cblxuICAvL0dvIGZyb20gZnJvbnQgcGFnZSB0byBjZXJ0YWluIHRhYiBpbiBGQVEgcGFnZVxuICB2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuICBpZihoYXNoLnN0YXJ0c1dpdGgoJyNpdGVtJykpe1xuICAgIGhhc2ggJiYgJCgndWwubmF2IGFbaHJlZj1cIicgKyBoYXNoICsgJ1wiXScpLnRhYignc2hvdycpO1xuICB9XG5cbiAgLy9TZWFyY2ggZm9ybVxuICAkKCcuc2VhcmNoLXBhbmVsIC5uYXZiYXItbmF2JykuZmluZCgnYScpLmNsaWNrKGZ1bmN0aW9uKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIHBhcmFtID0gJCh0aGlzKS5hdHRyKFwiaHJlZlwiKS5yZXBsYWNlKFwiI1wiLFwiXCIpO1xuICAgIHZhciBjb25jZXB0ID0gJCh0aGlzKS50ZXh0KCk7XG4gICAgJCgnLnNlYXJjaC1wYW5lbCBzcGFuI3NlYXJjaF9jb25jZXB0JykudGV4dChjb25jZXB0KTtcbiAgICAkKCcuZm9ybS1ncm91cCAjc2VhcmNoX3BhcmFtJykudmFsKHBhcmFtKTtcbiAgfSk7XG5cbiAgdmFyIHNlbGVjdG9yID0gJy5zZWFyY2gtcGFuZWwgLm5hdmJhci1uYXYgbGknO1xuXG4gICQoc2VsZWN0b3IpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgJChzZWxlY3RvcikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICB9KTtcblxuXG5cbiAgLy9QYW5lbCB1c2VkIGluIHNlYXJjaCB2aWV3IHRvIHNob3cgYSBsaXN0IG9mIG1lbWJlciBlbWFpbHNcbiAgJCgnLnBhbmVsLWhlYWRpbmcgc3Bhbi5jbGlja2FibGUnKS5wYXJlbnRzKCcucGFuZWwnKS5maW5kKCcucGFuZWwtYm9keScpLnNsaWRlVXAoKTtcblxuICAkKCcucGFuZWwtaGVhZGluZyBzcGFuLmNsaWNrYWJsZScpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSl7XG4gICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICBpZighJHRoaXMuaGFzQ2xhc3MoJ3BhbmVsLWNvbGxhcHNlZCcpKSB7XG4gICAgICAkdGhpcy5wYXJlbnRzKCcucGFuZWwnKS5maW5kKCcucGFuZWwtYm9keScpLnNsaWRlVXAoKTtcbiAgICAgICR0aGlzLmFkZENsYXNzKCdwYW5lbC1jb2xsYXBzZWQnKTtcbiAgICAgICR0aGlzLmZpbmQoJ2knKS5yZW1vdmVDbGFzcygnZ2x5cGhpY29uLWNoZXZyb24tdXAnKS5hZGRDbGFzcygnZ2x5cGhpY29uLWNoZXZyb24tZG93bicpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkdGhpcy5wYXJlbnRzKCcucGFuZWwnKS5maW5kKCcucGFuZWwtYm9keScpLnNsaWRlRG93bigpO1xuICAgICAgJHRoaXMucmVtb3ZlQ2xhc3MoJ3BhbmVsLWNvbGxhcHNlZCcpO1xuICAgICAgJHRoaXMuZmluZCgnaScpLnJlbW92ZUNsYXNzKCdnbHlwaGljb24tY2hldnJvbi1kb3duJykuYWRkQ2xhc3MoJ2dseXBoaWNvbi1jaGV2cm9uLXVwJyk7XG4gICAgfVxuICB9KTtcblxuXG4gIC8vRmFjZWJvb2sgc2hhcmluZyBidXR0b24gaGFuZGxlciwgRmFjZWJvb2sgU0RLIGZvciBKYXZhU2NyaXB0XG4gIGZ1bmN0aW9uIHBvc3RUb0ZlZWQodXJsKXtcbiAgICB2YXIgb2JqID0ge21ldGhvZDogJ2ZlZWQnLGxpbms6IHVybH07XG4gICAgZnVuY3Rpb24gY2FsbGJhY2socmVzcG9uc2Upe31cbiAgICBGQi51aShvYmosIGNhbGxiYWNrKTtcbiAgfVxuXG4gICQoJy5idG5TaGFyZScpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgZWxlbSA9ICQodGhpcyk7XG4gICAgcG9zdFRvRmVlZChlbGVtLnByb3AoJ2hyZWYnKSk7XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuXG5cbiAgLy9UaW55TUNcbiAgdGlueU1DRS5iYXNlVVJMID0gd2luZG93LkxhcmF2ZWwuYmFzZV9wYXRoK1wiL2pzL3RpbnltY2VcIjtcblxuICB0aW55bWNlLmluaXQoe1xuICAgIG1vZGUgOiBcInRleHRhcmVhc1wiLFxuICAgIHRoZW1lIDogXCJtb2Rlcm5cIixcbiAgICBsYW5ndWFnZTogd2luZG93LkxhcmF2ZWwubGFuZ3VhZ2UsXG4gICAgcGx1Z2luczogW1wibGlua1wiLCBcInBhc3RlXCJdLFxuICAgIG1lbnViYXI6IGZhbHNlLFxuICAgIHRvb2xiYXI6IFwibGlua1wiLFxuICAgIHJlbW92ZWZvcm1hdDogW1xuICAgICAge3NlbGVjdG9yOiAnYixzdHJvbmcsZW0saSxmb250LHUsc3RyaWtlJywgcmVtb3ZlIDogJ2FsbCcsIHNwbGl0IDogdHJ1ZSwgZXhwYW5kIDogZmFsc2UsIGJsb2NrX2V4cGFuZDogdHJ1ZSwgZGVlcCA6IHRydWV9LFxuICAgICAge3NlbGVjdG9yOiAnc3BhbicsIGF0dHJpYnV0ZXMgOiBbJ3N0eWxlJywgJ2NsYXNzJ10sIHJlbW92ZSA6ICdlbXB0eScsIHNwbGl0IDogdHJ1ZSwgZXhwYW5kIDogZmFsc2UsIGRlZXAgOiB0cnVlfSxcbiAgICAgIHtzZWxlY3RvcjogJyonLCBhdHRyaWJ1dGVzIDogWydzdHlsZScsICdjbGFzcyddLCBzcGxpdCA6IGZhbHNlLCBleHBhbmQgOiBmYWxzZSwgZGVlcCA6IHRydWUsfVxuICAgIF0sXG4gICAgc2VsZWN0aW9uX3Rvb2xiYXI6ICdib2xkIGl0YWxpYyB8IHF1aWNrbGluayBoMiBoMyBibG9ja3F1b3RlJyxcbiAgICBlZGl0b3Jfc2VsZWN0b3IgOiBcIm1jZVNpbXBsZUxpbmtcIixcbiAgICBwYXN0ZV9hc190ZXh0OiB0cnVlXG4gIH0pO1xuXG4gIHRpbnlNQ0UuaW5pdCh7XG4gICAgbW9kZSA6IFwidGV4dGFyZWFzXCIsXG4gICAgbGFuZ3VhZ2U6IHdpbmRvdy5MYXJhdmVsLmxhbmd1YWdlLFxuICAgIHBsdWdpbnM6IFtcImxpbmtcIiwgXCJsaXN0c1wiLCBcInBhc3RlXCIsIFwibm9uZWRpdGFibGVcIiwgXCJwcmV2ZW50ZGVsZXRlXCJdLFxuICAgIGhlaWdodCA6IFwiMzUwXCIsXG4gICAgcmVtb3ZlZm9ybWF0OiBbXG4gICAgICB7c2VsZWN0b3I6ICdiLHN0cm9uZyxlbSxpLGZvbnQsdSxzdHJpa2UnLCByZW1vdmUgOiAnYWxsJywgc3BsaXQgOiB0cnVlLCBleHBhbmQgOiBmYWxzZSwgYmxvY2tfZXhwYW5kOiB0cnVlLCBkZWVwIDogdHJ1ZX0sXG4gICAgICB7c2VsZWN0b3I6ICdzcGFuJywgYXR0cmlidXRlcyA6IFsnc3R5bGUnLCAnY2xhc3MnXSwgcmVtb3ZlIDogJ2VtcHR5Jywgc3BsaXQgOiB0cnVlLCBleHBhbmQgOiBmYWxzZSwgZGVlcCA6IHRydWV9LFxuICAgICAge3NlbGVjdG9yOiAnKicsIGF0dHJpYnV0ZXMgOiBbJ3N0eWxlJywgJ2NsYXNzJ10sIHNwbGl0IDogZmFsc2UsIGV4cGFuZCA6IGZhbHNlLCBkZWVwIDogdHJ1ZX1cbiAgICBdLFxuICAgIHRvb2xiYXI6IFwicmVkbyB1bmRvIGJvbGQgaXRhbGljIG51bWxpc3QgYnVsbGlzdCBsaW5rXCIsXG4gICAgbWVudWJhcjogZmFsc2UsXG4gICAgZWRpdG9yX3NlbGVjdG9yIDogXCJtY2VTaW1wbGVcIixcbiAgICBwYXN0ZV9hc190ZXh0OiB0cnVlXG4gIH0pO1xuXG4gICQoJyNzdWJtaXQtcHJvamVjdC1idXR0b24nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB0aW55TUNFLnRyaWdnZXJTYXZlKCk7XG4gICAgaWYgKHRpbnlNQ0UuZ2V0KCdwcm9qZWN0X291dGNvbWVzJykuZ2V0Q29udGVudCgpICE9ICcnKSB7XG4gICAgICB0aW55TUNFLmdldCgncHJvamVjdF9vdXRjb21lcycpLnNldENvbnRlbnQocmVtb3ZlRXhjZXNzV2hpdGVzcGFjZUZyb21TdHJpbmcodGlueU1DRS5nZXQoJ3Byb2plY3Rfb3V0Y29tZXMnKS5nZXRDb250ZW50KCkuc3BsaXQoJyZuYnNwOycpLmpvaW4oJyAnKSkpO1xuICAgIH1cbiAgICBpZiAodGlueU1DRS5nZXQoJ25vdmVsdHlfZGVzYycpLmdldENvbnRlbnQoKSAhPSAnJykge1xuICAgICAgdGlueU1DRS5nZXQoJ25vdmVsdHlfZGVzYycpLnNldENvbnRlbnQocmVtb3ZlRXhjZXNzV2hpdGVzcGFjZUZyb21TdHJpbmcodGlueU1DRS5nZXQoJ25vdmVsdHlfZGVzYycpLmdldENvbnRlbnQoKS5zcGxpdCgnJm5ic3A7Jykuam9pbignICcpKSk7XG4gICAgfVxuICAgIGlmICh0aW55TUNFLmdldCgnYWltJykuZ2V0Q29udGVudCgpICE9ICcnKSB7XG4gICAgICB0aW55TUNFLmdldCgnYWltJykuc2V0Q29udGVudChyZW1vdmVFeGNlc3NXaGl0ZXNwYWNlRnJvbVN0cmluZyh0aW55TUNFLmdldCgnYWltJykuZ2V0Q29udGVudCgpLnNwbGl0KCcmbmJzcDsnKS5qb2luKCcgJykpKTtcbiAgICB9XG4gICAgaWYgKHRpbnlNQ0UuZ2V0KCdkZXNjcmlwdGlvbicpLmdldENvbnRlbnQoKSAhPSAnJykge1xuICAgICAgdGlueU1DRS5nZXQoJ2Rlc2NyaXB0aW9uJykuc2V0Q29udGVudChyZW1vdmVFeGNlc3NXaGl0ZXNwYWNlRnJvbVN0cmluZyh0aW55TUNFLmdldCgnZGVzY3JpcHRpb24nKS5nZXRDb250ZW50KCkuc3BsaXQoJyZuYnNwOycpLmpvaW4oJyAnKSkpO1xuICAgIH1cbiAgICB0aW55TUNFLnRyaWdnZXJTYXZlKCk7XG4gICAgJCgnI3Byb2plY3QtZm9ybScpLnN1Ym1pdCgpO1xuICB9KTtcblxuXG4gIGZ1bmN0aW9uIHJlbW92ZUV4Y2Vzc1doaXRlc3BhY2VGcm9tU3RyaW5nIChzdHJpbmcpIHtcbiAgICB2YXIgc3RyaW5nTGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgICB2YXIgb3V0cHV0U3RyaW5nID0gXCJcIjtcbiAgICBmb3IgKHZhciBpPTA7aTxzdHJpbmdMZW5ndGgtMTtpKyspIHtcbiAgICAgIGlmICghKHN0cmluZ1tpXSA9PT0gXCIgXCIgJiYgc3RyaW5nW2krMV0gPT09IFwiIFwiIHx8IHN0cmluZ1tpXSA9PT0gXCIgXCIgJiYgc3RyaW5nW2krMV0gPT09IFwiPFwiIHx8IHN0cmluZ1tpLTFdID09PSBcIj5cIiAmJiBzdHJpbmdbaV0gPT09IFwiIFwiKSkge1xuICAgICAgICBvdXRwdXRTdHJpbmcgKz0gc3RyaW5nW2ldO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoc3RyaW5nW3N0cmluZ0xlbmd0aF0gIT09IFwiIFwiKSB7XG4gICAgICBvdXRwdXRTdHJpbmcgKz0gc3RyaW5nW3N0cmluZ0xlbmd0aC0xXVxuICAgIH1cbiAgICAvLyBSZW1vdmluZyBlbXB0eSB0YWdzXG4gICAgdmFyIGhlbHBlciA9ICQoJzxkaXY+JykuYXBwZW5kKG91dHB1dFN0cmluZyk7XG4gICAgcmVtb3ZlRW1wdHlJZk5vQ2hpbGRyZW4oaGVscGVyKTtcbiAgICBvdXRwdXRTdHJpbmcgPSBoZWxwZXIucHJvcCgnaW5uZXJIVE1MJyk7XG4gICAgcmV0dXJuIG91dHB1dFN0cmluZztcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZUVtcHR5SWZOb0NoaWxkcmVuIChlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQuY2hpbGRyZW4oKS5sZW5ndGggPiAwKSB7XG4gICAgICBlbGVtZW50LmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJlbW92ZUVtcHR5SWZOb0NoaWxkcmVuKCQodGhpcykpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChlbGVtZW50Lmh0bWwoKSA9PT0gXCJcIikge1xuICAgICAgZWxlbWVudC5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICAvL0Zyb250IHBhZ2UgbG9nbyB0cmFuc2xhdGlvblxuICBpZih3aW5kb3cuTGFyYXZlbC5sYW5ndWFnZSA9PSAnZW4nKXtcbiAgICAkKCcuYmxvY2swMS5ibG9jazAxYiA+IC5wYWQnKS5jc3MoXCJiYWNrZ3JvdW5kXCIsICd1cmwoY3NzL2JnMDVfZW4ucG5nKSBuby1yZXBlYXQgNTAlIDUwJScpO1xuICB9ZWxzZXtcbiAgICAkKCcuYmxvY2swMS5ibG9jazAxYiA+IC5wYWQnKS5jc3MoXCJiYWNrZ3JvdW5kXCIsICd1cmwoY3NzL2JnMDUucG5nKSBuby1yZXBlYXQgNTAlIDUwJScpO1xuICB9XG5cblxuICAvL1NlbGVjdCBwcm9qZWN0IHNoYXJlIHVybCBvbiBjbGljayBvbiBpbnB1dFxuICAkKFwiaW5wdXRbbmFtZT0nc2hhcmVfdXJsJ11cIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgJCh0aGlzKS5zZWxlY3QoKTtcbiAgfSk7XG5cblxuICBpZigkKFwiI3Byb2plY3RfYWxsX21lbWJlcnNcIikubGVuZ3RoKSB7XG5cbiAgICAvL1Byb2plY3QgaWQgdXNlZCBieSBQcm9qZWN0TW9kZXJhdG9yIG1pZGRsZXdhcmVcbiAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lO1xuICAgIHZhciBzZWdtZW50cyA9IHVybC5zcGxpdCggJy8nICk7XG4gICAgdmFyIHByb2plY3RfaWQgPSAgc2VnbWVudHNbc2VnbWVudHMubGVuZ3RoLTJdO1xuXG5cbiAgICAvL0RyYWcgYW5kIGRyb3AgcHJvamVjdCBncm91cCBtZW1iZXJzIGZ1bmN0aW9uYWxpdHlcbiAgICBTb3J0YWJsZS5jcmVhdGUocHJvamVjdF9hbGxfbWVtYmVycywge1xuICAgICAgZ3JvdXA6IHsgbmFtZTogXCJwcm9qZWN0LWFsbC1tZW1iZXJzXCIsIHB1bGw6IHRydWUsIHB1dDp0cnVlIH0sXG4gICAgICBhbmltYXRpb246IDE1MCxcbiAgICAgIGhhbmRsZTogJy5kcmFnLWhhbmRsZSdcbiAgICB9KTtcblxuICAgIHZhciBlbCA9ICQoJy5wcm9qZWN0LWdyb3VwJyk7XG4gICAgJChlbCkuZWFjaChmdW5jdGlvbiAoaSxlKSB7XG4gICAgICB2YXIgc29ydGFibGUgPSBTb3J0YWJsZS5jcmVhdGUoZSwge1xuICAgICAgICBncm91cDoge1xuICAgICAgICAgIG5hbWU6IGVsLmF0dHIoJ2dyb3VwLWlkJyksXG4gICAgICAgICAgcHVsbDogdHJ1ZSxcbiAgICAgICAgICBwdXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYW5pbWF0aW9uOiAxNTAsXG4gICAgICAgIGhhbmRsZTogJy5kcmFnLWhhbmRsZScsXG4gICAgICAgIG9uQWRkOiBmdW5jdGlvbiAoZXZ0KSB7XG5cbiAgICAgICAgICB2YXIgaXRlbUVsID0gZXZ0Lml0ZW07ICAvLyBkcmFnZ2VkIEhUTUxFbGVtZW50XG4gICAgICAgICAgdmFyIGZyb20gPSBldnQuZnJvbTtcblxuXG4gICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogd2luZG93LkxhcmF2ZWwuYWRkX3VzZXJfdG9fZ3JvdXBfYXBpX3VybCxcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICAgICAgICBkZWxheTogMjUwLFxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBjYWNoZTogZmFsc2UsXG4gICAgICAgICAgICBkYXRhOiB7XG5cbiAgICAgICAgICAgICAgaWQ6IHByb2plY3RfaWQsXG4gICAgICAgICAgICAgIHRvOiAkKGl0ZW1FbCkucGFyZW50KCkuYXR0cignZ3JvdXAtaWQnKSxcbiAgICAgICAgICAgICAgZnJvbTogJChmcm9tKS5hdHRyKCdncm91cC1pZCcpLFxuICAgICAgICAgICAgICB1c2VyOiAkKGl0ZW1FbCkuYXR0cigndXNlci1pZCcpXG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKCBtc2cgKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtc2cpO1xuICAgICAgICAgICAgaWYoJCgnYSNncm91cHMtZmluaXNoLWJ1dHRvbicpLmxlbmd0aCl7XG4gICAgICAgICAgICAgICQoJ2EjZ3JvdXBzLWZpbmlzaC1idXR0b24nKS5hZGRDbGFzcygnbm90LWVtcHR5Jyk7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgICAgfSk7XG4gICAgfSlcbiAgfVxuXG5cbiAgLy9Db3B5IHVzZXIgbWFpbiBUTFUgZW1haWwgaW50byBjb250YWN0IGVtYWlsIGZpZWxkcywgdXNlZCBvbiBwcm9maWxlIHBhZ2VcbiAgJChcIiNmaWxsZXJcIikuY2xpY2soZmlsbFZhbHVlcyk7XG5cblxuICBmdW5jdGlvbiBmaWxsVmFsdWVzKCkge1xuICAgIHZhciB2YWx1ZSA9ICQoXCIjdGx1X2VtYWlsXCIpLnZhbCgpO1xuICAgIHZhciBmaWVsZHM9ICQoXCIuY29udGFjdC1lbWFpbFwiKTtcbiAgICBmaWVsZHMuZWFjaChmdW5jdGlvbiAoaSkge1xuICAgICAgJCh0aGlzKS52YWwodmFsdWUpO1xuICAgIH0pO1xuICB9XG5cblxuXG4gIC8vQWRkIGN1c3RvbSBpbnN0aXR1dGlvbiBmaWVsZCBpbiB1c2VyIHJlZ2lzdHJhdGlvbiBmb3JtXG4gICQoJyNpbnN0aXR1dGlvbicpLm9uKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7XG4gICAgaWYoICQodGhpcykudmFsKCkgPT09IHdpbmRvdy5MYXJhdmVsLm90aGVyX2luc3RpdHV0aW9uKXtcbiAgICAgICQoXCIjb3RoZXItaW5zdGl0dXRpb25cIikuc2hvdygpXG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAkKFwiI290aGVyLWluc3RpdHV0aW9uXCIpLmhpZGUoKVxuICAgIH1cbiAgfSk7XG5cblxuXG5cbiAgLy8gQWRkIG5ldyBncm91cCBsaW5rcyBpbnB1dCBmaWVsZFxuICB2YXIgYWRkX2xpbmtzX2ZpZWxkX2J1dHRvbnMgPSAkKFwiLmFkZF9saW5rc19maWVsZF9idXR0b25cIik7XG5cbiAgYWRkX2xpbmtzX2ZpZWxkX2J1dHRvbnMuZWFjaChmdW5jdGlvbiAoaSwgb2JqKSB7XG4gICAgdmFyIGdyb3VwX2lkID0gJChvYmopLmF0dHIoXCJncm91cC1pZFwiKTtcbiAgICAkKG9iaikuY2xpY2soZnVuY3Rpb24oZSl7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB2YXIgJGRpdiA9ICQodGhpcykubmV4dCggXCIuZ3JvdXAtbWF0ZXJpYWxzXCIpLmNoaWxkcmVuKCkubGFzdCgpO1xuXG4gICAgICB2YXIgbnVtID0gJGRpdi5wcm9wKFwiaWRcIik7XG5cbiAgICAgIG51bSA9IHBhcnNlSW50KG51bS5zcGxpdChcIl9cIikucG9wKCkpO1xuXG5cbiAgICAgIHZhciBjbG9uZSA9ICQoJGRpdikuY2xvbmUoKTtcbiAgICAgIGNsb25lLnByb3AoJ2lkJywgJ2dyb3VwX21hdGVyaWFsc18nK2dyb3VwX2lkKydfJysobnVtKzEpKTtcbiAgICAgIGNsb25lLmZpbmQoXCJpbnB1dFwiKS52YWwoXCJcIik7XG4gICAgICBjbG9uZS5pbnNlcnRBZnRlcigkZGl2KTtcblxuICAgICAgdmFyIHRhZ3NpbnB1dCA9IGNsb25lLmZpbmQoJy50YWdzJyk7XG4gICAgICBjbG9uZS5maW5kKCcuYm9vdHN0cmFwLXRhZ3NpbnB1dCcpLnJlbW92ZSgpO1xuXG4gICAgICAkKHRhZ3NpbnB1dCkuYXR0cignbmFtZScsICdncm91cF9tYXRlcmlhbF90YWdzWycrZ3JvdXBfaWQrJ11bXScpO1xuICAgICAgJCh0YWdzaW5wdXQpLmFkZENsYXNzKCdmb3JtLWNvbnRyb2wgdGFncycpO1xuICAgICAgdGFnc2lucHV0LnRhZ3NpbnB1dCgpO1xuICAgICAgdGFnc2lucHV0LnRhZ3NpbnB1dCgncmVtb3ZlQWxsJyk7XG5cblxuXG5cblxuICAgIH0pO1xuXG4gIH0pO1xuXG5cblxuXG4gIC8vIFJlbW92ZSBncm91cCBsaW5rcyBpbnB1dCBmaWVsZFxuICB2YXIgcmVtb3ZlX2xpbmtzX2ZpZWxkX2J1dHRvbiA9ICQoXCIucmVtb3ZlX2xpbmtzX2ZpZWxkX2J1dHRvblwiKTtcblxuICByZW1vdmVfbGlua3NfZmllbGRfYnV0dG9uLmVhY2goZnVuY3Rpb24gKGksIG9iaikge1xuICAgIHZhciBncm91cF9pZCA9ICQob2JqKS5hdHRyKFwiZ3JvdXAtaWRcIik7XG4gICAgJChvYmopLmNsaWNrKGZ1bmN0aW9uKGUpe1xuXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB2YXIgJGRpdiA9ICQodGhpcykucGFyZW50KCkuY2hpbGRyZW4oXCI6bGFzdC1jaGlsZFwiKTtcblxuICAgICAgdmFyIG51bSA9ICRkaXYucHJvcChcImlkXCIpO1xuXG4gICAgICBudW0gPSBwYXJzZUludChudW0uc3BsaXQoXCJfXCIpLnBvcCgpKTtcblxuICAgICAgaWYobnVtPjApe1xuICAgICAgICAkZGl2LnJlbW92ZSgpO1xuICAgICAgfVxuXG5cblxuXG5cblxuICAgIH0pO1xuICB9KTtcblxuXG5cbiAgJCgnW2RhdGEtdG9nZ2xlPVwicG9wb3ZlclwiXScpLnBvcG92ZXIoKTtcblxuXG4gICQoJyNjbGVhci1lbWJlZGRlZCcpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgJCgnI2VtYmVkZGVkJylcbiAgICAgIC52YWwoJycpXG4gIH0pO1xuXG5cbiAgJCgnI2NsZWFyLWdyb3VwLWVtYmVkZGVkJykuY2xpY2soZnVuY3Rpb24oKXtcbiAgICAkKHRoaXMpLnByZXYoJ2lucHV0JykudmFsKCcnKTtcbiAgfSk7XG5cblxuICAkKCdib2R5JykudG9vbHRpcCh7XG4gICAgc2VsZWN0b3I6ICdbcmVsPVwidG9vbHRpcFwiXSdcbiAgfSk7XG5cblxuICAvL0dyb3VwIHRpdGxlIHJlbmFtaW5nO1xuICAkKCcuZ3JvdXAtbmFtZScpLmVkaXRhYmxlKHtcbiAgICBzZW5kOidhbHdheXMnLFxuICAgIGFqYXhPcHRpb25zOiB7XG4gICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgdHlwZTogJ3Bvc3QnLFxuXG4gICAgfSxcbiAgICBwYXJhbXM6IGZ1bmN0aW9uKHBhcmFtcykge1xuICAgICAgLy9vcmlnaW5hbGx5IHBhcmFtcyBjb250YWluIHBrLCBuYW1lIGFuZCB2YWx1ZVxuICAgICAgcGFyYW1zLmlkID0gJCh0aGlzKS5jbG9zZXN0KFwiZGl2XCIpLmF0dHIoXCJwcm9qZWN0LWlkXCIpO1xuICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9XG5cbiAgfSk7XG5cblxuXG5cblxufSk7XG5cbkRyb3B6b25lLmF1dG9EaXNjb3ZlciA9IGZhbHNlO1xuRHJvcHpvbmUucHJvdG90eXBlLmRlZmF1bHRPcHRpb25zLmRpY3RSZW1vdmVGaWxlID0gd2luZG93LkxhcmF2ZWwucmVtb3ZlX2ZpbGVfYnV0dG9uO1xuXG52YXIgZHJvcHpvbmVzID0gJChcIi5kcm9wem9uZVwiKTtcbmRyb3B6b25lcy5lYWNoKGZ1bmN0aW9uIChpKSB7XG4gIGlmICh0aGlzLmlkLmluZGV4T2YoXCJwcmVzZW50YXRpb25VcGxvYWRcIikgIT09IC0xKSB7XG4gICAgdmFyIHJlc291cmNlTmFtZSA9IFwiUG9zdGVyXCI7XG4gICAgdmFyIGFjY2VwdGVkID0gXCJhcHBsaWNhdGlvbi9wZGZcIjtcbiAgICB2YXIgbWF4TnVtYmVyT2ZGaWxlcyA9IDE7XG4gICAgdmFyIGdyb3VwX2lkID0gcGFyc2VJbnQoICQodGhpcykucHJvcChcImlkXCIpLm1hdGNoKC9cXGQrL2cpLCAxMCApO1xuXG4gICAgdmFyIHByb2plY3RfaWQgPSAkKFwiI3ByZXNlbnRhdGlvblVwbG9hZFwiK2dyb3VwX2lkKS5hdHRyKFwicHJvamVjdC1pZFwiKTtcbiAgICB2YXIgZHJvcHpvbmVfbmFtZSA9IFwiI3ByZXNlbnRhdGlvblVwbG9hZFwiK2dyb3VwX2lkO1xuICB9IGVsc2Uge1xuICAgIHZhciByZXNvdXJjZU5hbWUgPSBcIk1hdGVyaWFsc1wiO1xuICAgIHZhciBhY2NlcHRlZCA9IFwiXCI7XG4gICAgdmFyIG1heE51bWJlck9mRmlsZXMgPSAxMDA7XG4gICAgdmFyIGdyb3VwX2lkID0gcGFyc2VJbnQoICQodGhpcykucHJvcChcImlkXCIpLm1hdGNoKC9cXGQrL2cpLCAxMCApO1xuXG4gICAgdmFyIHByb2plY3RfaWQgPSAkKFwiI21hdGVyaWFsc1VwbG9hZFwiK2dyb3VwX2lkKS5hdHRyKFwicHJvamVjdC1pZFwiKTtcbiAgICB2YXIgZHJvcHpvbmVfbmFtZSA9IFwiI21hdGVyaWFsc1VwbG9hZFwiK2dyb3VwX2lkO1xuICB9XG4gIGlmICh0aGlzLmdldEF0dHJpYnV0ZSgnYXV0aCcpID09ICdzdHVkZW50Jykge1xuICAgIHZhciByb3V0ZVRvID0gJ2ZpbmlzaCc7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHJvdXRlVG8gPSAncHJvamVjdCc7XG4gIH1cblxuICAgIHZhciBteURyb3B6b25lID0gbmV3IERyb3B6b25lKGRyb3B6b25lX25hbWUsIHtcbiAgICB1cmw6IHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCtcIi9cIityb3V0ZVRvK1wiL1wiK3Byb2plY3RfaWQrXCIvZmluaXNoL3VwbG9hZFwiK3Jlc291cmNlTmFtZSxcbiAgICBwYXJhbXM6IHtcbiAgICAgIGlkOiBwcm9qZWN0X2lkLFxuICAgICAgX3Rva2VuOiB3aW5kb3cuTGFyYXZlbC5jc2ZyX3Rva2VuLFxuICAgICAgZ3JvdXBfaWQ6IGdyb3VwX2lkXG4gICAgfSxcbiAgICB0aW1lb3V0OiAwLFxuICAgIHBhcmFsbGVsVXBsb2FkczogMSxcbiAgICBwYXJhbU5hbWU6IFwiZmlsZVwiLFxuICAgIGFjY2VwdGVkRmlsZXM6IGFjY2VwdGVkLFxuICAgIG1heEZpbGVzOiBtYXhOdW1iZXJPZkZpbGVzLFxuICAgIG1heEZpbGVzaXplOiAzMCwgLy8gTUJcblxuICAgIGFkZFJlbW92ZUxpbmtzOiB0cnVlLFxuXG4gICAgaW5pdDpmdW5jdGlvbigpIHtcblxuXG4gICAgICAvLyBBZGQgc2VydmVyIGltYWdlc1xuICAgICAgdmFyIG15RHJvcHpvbmUgPSB0aGlzO1xuXG4gICAgICAkLmdldCh3aW5kb3cuTGFyYXZlbC5iYXNlX3BhdGgrXCIvXCIrcm91dGVUbytcIi9cIitwcm9qZWN0X2lkK1wiL2FwaS9ncm91cC1cIityZXNvdXJjZU5hbWUrXCI/Z3JvdXBpZD1cIitncm91cF9pZCwgZnVuY3Rpb24oZGF0YSkge1xuXG5cbiAgICAgICAgJC5lYWNoKGRhdGEuaW1hZ2VzLCBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICAgIHZhciBmaWxlID0ge25hbWU6IHZhbHVlLmZpbGVuYW1lLCBzaXplOiB2YWx1ZS5zaXplfTtcbiAgICAgICAgICBteURyb3B6b25lLm9wdGlvbnMuYWRkZWRmaWxlLmNhbGwobXlEcm9wem9uZSwgZmlsZSk7XG4gICAgICAgICAgbXlEcm9wem9uZS5jcmVhdGVUaHVtYm5haWxGcm9tVXJsKGZpbGUsIHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCtcIi9zdG9yYWdlL3Byb2plY3RzX2dyb3Vwc19pbWFnZXMvXCIrZ3JvdXBfaWQrXCIvXCIrdmFsdWUubmFtZSk7XG4gICAgICAgICAgbXlEcm9wem9uZS5lbWl0KFwiY29tcGxldGVcIiwgZmlsZSk7XG4gICAgICAgICAgdmFyIGJ0bmRlbGV0ZSA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWR6LXJlbW92ZV1cIik7XG4gICAgICAgICAgYnRuZGVsZXRlLnNldEF0dHJpYnV0ZShcImlkXCIsICdkZWxldGUtbWVkaWEtbmFtZS0nK3ZhbHVlLm5hbWUpO1xuXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMub24oXCJyZW1vdmVkZmlsZVwiLCBmdW5jdGlvbihmaWxlKSB7XG5cbiAgICAgICAgdmFyIGJ0bmRlbGV0ZSA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWR6LXJlbW92ZV1cIik7XG4gICAgICAgIGlmKGJ0bmRlbGV0ZS5oYXNBdHRyaWJ1dGUoXCJpZFwiKSkge1xuICAgICAgICAgIHZhciBmaWxlbmFtZSA9IGJ0bmRlbGV0ZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKS5zdWJzdHIoMTgpO1xuICAgICAgICB9XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICB1cmw6IHdpbmRvdy5MYXJhdmVsLmJhc2VfcGF0aCtcIi9cIityb3V0ZVRvK1wiL1wiK3Byb2plY3RfaWQrXCIvZmluaXNoL2RlbGV0ZVwiK3Jlc291cmNlTmFtZSxcbiAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgIGRlbGF5OiAyNTAsXG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgICAgIGRhdGE6IHtcblxuICAgICAgICAgICAgaWQ6IHByb2plY3RfaWQsXG4gICAgICAgICAgICBuYW1lOiBmaWxlbmFtZSxcbiAgICAgICAgICAgIGdyb3VwX2lkOiBncm91cF9pZFxuXG4gICAgICAgICAgfVxuICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKCBtc2cgKSB7XG4gICAgICAgICAgY29uc29sZS5sb2cobXNnKTtcblxuICAgICAgICB9KTtcblxuICAgICAgfSApO1xuICAgIH0sXG4gICAgc3VjY2VzczogZnVuY3Rpb24oZmlsZSwgc2VydmVyUmVzcG9uc2UpIHtcbiAgICAgIHZhciBmaWxldXBsb2RlZCA9IGZpbGUucHJldmlld0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWR6LW5hbWVdXCIpO1xuICAgICAgZmlsZXVwbG9kZWQuaW5uZXJIVE1MID0gc2VydmVyUmVzcG9uc2UubmV3ZmlsZW5hbWU7XG4gICAgICB2YXIgYnRuZGVsZXRlID0gZmlsZS5wcmV2aWV3RWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtZHotcmVtb3ZlXVwiKTtcbiAgICAgIGJ0bmRlbGV0ZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCAnZGVsZXRlLW1lZGlhLW5hbWUtJytzZXJ2ZXJSZXNwb25zZS5uZXdmaWxlbmFtZSk7XG4gICAgICB3aW5kb3cuYWxlcnQoJ1VwbG9hZCBzdWNjZXNzZnVsJyk7XG4gICAgfVxuICB9KTtcbn0pO1xuXG5cblxuXG5cblxuXG5cbi8qXG4gIFNlbmRpbmcgREVMRVRFIHJlcXVlc3Qgd2l0aG91dCBhIGZvcm1cbiAgRXhhbXBsZTpcbiAgPGEgaHJlZj1cInBvc3RzLzJcIiBkYXRhLW1ldGhvZD1cImRlbGV0ZVwiIGRhdGEtdG9rZW49XCJ7e2NzcmZfdG9rZW4oKX19XCI+XG4gKi9cblxuKGZ1bmN0aW9uKCkge1xuXG4gIHZhciBsYXJhdmVsID0ge1xuICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5tZXRob2RMaW5rcyA9ICQoJ2FbZGF0YS1tZXRob2RdJyk7XG4gICAgICB0aGlzLnRva2VuID0gJCgnYVtkYXRhLXRva2VuXScpO1xuICAgICAgdGhpcy5yZWdpc3RlckV2ZW50cygpO1xuICAgIH0sXG5cbiAgICByZWdpc3RlckV2ZW50czogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLm1ldGhvZExpbmtzLm9uKCdjbGljaycsIHRoaXMuaGFuZGxlTWV0aG9kKTtcbiAgICB9LFxuXG4gICAgaGFuZGxlTWV0aG9kOiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgbGluayA9ICQodGhpcyk7XG4gICAgICB2YXIgaHR0cE1ldGhvZCA9IGxpbmsuZGF0YSgnbWV0aG9kJykudG9VcHBlckNhc2UoKTtcbiAgICAgIHZhciBmb3JtO1xuXG4gICAgICAvLyBJZiB0aGUgZGF0YS1tZXRob2QgYXR0cmlidXRlIGlzIG5vdCBQVVQgb3IgREVMRVRFLFxuICAgICAgLy8gdGhlbiB3ZSBkb24ndCBrbm93IHdoYXQgdG8gZG8uIEp1c3QgaWdub3JlLlxuICAgICAgaWYgKCAkLmluQXJyYXkoaHR0cE1ldGhvZCwgWydQVVQnLCAnREVMRVRFJ10pID09PSAtIDEgKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gQWxsb3cgdXNlciB0byBvcHRpb25hbGx5IHByb3ZpZGUgZGF0YS1jb25maXJtPVwiQXJlIHlvdSBzdXJlP1wiXG4gICAgICBpZiAoIGxpbmsuZGF0YSgnY29uZmlybScpICkge1xuICAgICAgICBpZiAoICEgbGFyYXZlbC52ZXJpZnlDb25maXJtKGxpbmspICkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmb3JtID0gbGFyYXZlbC5jcmVhdGVGb3JtKGxpbmspO1xuICAgICAgZm9ybS5zdWJtaXQoKTtcblxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0sXG5cbiAgICB2ZXJpZnlDb25maXJtOiBmdW5jdGlvbihsaW5rKSB7XG4gICAgICByZXR1cm4gY29uZmlybShsaW5rLmRhdGEoJ2NvbmZpcm0nKSk7XG4gICAgfSxcblxuICAgIGNyZWF0ZUZvcm06IGZ1bmN0aW9uKGxpbmspIHtcbiAgICAgIHZhciBmb3JtID1cbiAgICAgICAgJCgnPGZvcm0+Jywge1xuICAgICAgICAgICdtZXRob2QnOiAnUE9TVCcsXG4gICAgICAgICAgJ2FjdGlvbic6IGxpbmsuYXR0cignaHJlZicpXG4gICAgICAgIH0pO1xuXG4gICAgICB2YXIgdG9rZW4gPVxuICAgICAgICAkKCc8aW5wdXQ+Jywge1xuICAgICAgICAgICd0eXBlJzogJ2hpZGRlbicsXG4gICAgICAgICAgJ25hbWUnOiAnX3Rva2VuJyxcbiAgICAgICAgICAndmFsdWUnOiBsaW5rLmRhdGEoJ3Rva2VuJylcbiAgICAgICAgfSk7XG5cbiAgICAgIHZhciBoaWRkZW5JbnB1dCA9XG4gICAgICAgICQoJzxpbnB1dD4nLCB7XG4gICAgICAgICAgJ25hbWUnOiAnX21ldGhvZCcsXG4gICAgICAgICAgJ3R5cGUnOiAnaGlkZGVuJyxcbiAgICAgICAgICAndmFsdWUnOiBsaW5rLmRhdGEoJ21ldGhvZCcpXG4gICAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gZm9ybS5hcHBlbmQodG9rZW4sIGhpZGRlbklucHV0KVxuICAgICAgICAuYXBwZW5kVG8oJ2JvZHknKTtcbiAgICB9XG4gIH07XG5cbiAgbGFyYXZlbC5pbml0aWFsaXplKCk7XG5cbn0pKCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcmVzb3VyY2VzL2Fzc2V0cy9qcy9hcHAuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ]);